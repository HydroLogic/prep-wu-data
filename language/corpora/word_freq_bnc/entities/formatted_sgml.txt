FULL_MAPPINGS = {
  "excl"      => { :hex => 0x0021,	:entity => "&excl;",      :type => "ISOnum",      :udesc => "EXCLAMATION MARK" },
  "quot"      => { :hex => 0x0022,	:entity => "&quot;",      :type => "ISOnum",      :udesc => "QUOTATION MARK" },
  "num"       => { :hex => 0x0023,	:entity => "&num;",       :type => "ISOnum",      :udesc => "NUMBER SIGN" },
  "dollar"    => { :hex => 0x0024,	:entity => "&dollar;",    :type => "ISOnum",      :udesc => "DOLLAR SIGN" },
  "percnt"    => { :hex => 0x0025,	:entity => "&percnt;",    :type => "ISOnum",      :udesc => "PERCENT SIGN" },
  "amp"       => { :hex => 0x0026,	:entity => "&amp;",       :type => "ISOnum",      :udesc => "AMPERSAND" },
  "lpar"      => { :hex => 0x0028,	:entity => "&lpar;",      :type => "ISOnum",      :udesc => "LEFT PARENTHESIS" },
  "rpar"      => { :hex => 0x0029,	:entity => "&rpar;",      :type => "ISOnum",      :udesc => "RIGHT PARENTHESIS" },
  "ast"       => { :hex => 0x002A,	:entity => "&ast;",       :type => "ISOnum",      :udesc => "ASTERISK" },
  "plus"      => { :hex => 0x002B,	:entity => "&plus;",      :type => "ISOnum",      :udesc => "PLUS SIGN" },
  "comma"     => { :hex => 0x002C,	:entity => "&comma;",     :type => "ISOnum",      :udesc => "COMMA" },
  "hyphen"    => { :hex => 0x002D,	:entity => "&hyphen;",    :type => "ISOnum",      :udesc => "HYPHEN-MINUS" },
  "period"    => { :hex => 0x002E,	:entity => "&period;",    :type => "ISOnum",      :udesc => "FULL STOP" },
  "sol"       => { :hex => 0x002F,	:entity => "&sol;",       :type => "ISOnum",      :udesc => "SOLIDUS" },
  "colon"     => { :hex => 0x003A,	:entity => "&colon;",     :type => "ISOnum",      :udesc => "COLON" },
  "semi"      => { :hex => 0x003B,	:entity => "&semi;",      :type => "ISOnum",      :udesc => "SEMICOLON" },
  "lt"        => { :hex => 0x003C,	:entity => "&lt;",        :type => "ISOnum",      :udesc => "LESS-THAN SIGN" },
  "equals"    => { :hex => 0x003D,	:entity => "&equals;",    :type => "ISOnum",      :udesc => "EQUALS SIGN" },
  "gt"        => { :hex => 0x003E,	:entity => "&gt;",        :type => "ISOnum",      :udesc => "GREATER-THAN SIGN" },
  "quest"     => { :hex => 0x003F,	:entity => "&quest;",     :type => "ISOnum",      :udesc => "QUESTION MARK" },
  "commat"    => { :hex => 0x0040,	:entity => "&commat;",    :type => "ISOnum",      :udesc => "COMMERCIAL AT" },
  "lsqb"      => { :hex => 0x005B,	:entity => "&lsqb;",      :type => "ISOnum",      :udesc => "LEFT SQUARE BRACKET" },
  "bsol"      => { :hex => 0x005C,	:entity => "&bsol;",      :type => "ISOnum",      :udesc => "REVERSE SOLIDUS" },
  "sbsol"     => { :hex => 0x005C,	:entity => "&sbsol;",     :type => "ISOamso",     :udesc => "REVERSE SOLIDUS" },
  "rsqb"      => { :hex => 0x005D,	:entity => "&rsqb;",      :type => "ISOnum",      :udesc => "RIGHT SQUARE BRACKET" },
  "lowbar"    => { :hex => 0x005F,	:entity => "&lowbar;",    :type => "ISOnum",      :udesc => "LOW LINE" },
  "grave"     => { :hex => 0x0060,	:entity => "&grave;",     :type => "ISOdia",      :udesc => "GRAVE ACCENT" },
  "lcub"      => { :hex => 0x007B,	:entity => "&lcub;",      :type => "ISOnum",      :udesc => "LEFT CURLY BRACKET" },
  "verbar"    => { :hex => 0x007C,	:entity => "&verbar;",    :type => "ISOnum",      :udesc => "VERTICAL LINE" },
  "rcub"      => { :hex => 0x007D,	:entity => "&rcub;",      :type => "ISOnum",      :udesc => "RIGHT CURLY BRACKET" },
  "nbsp"      => { :hex => 0x00A0,	:entity => "&nbsp;",      :type => "ISOnum",      :udesc => "NO-BREAK SPACE" },
  "iexcl"     => { :hex => 0x00A1,	:entity => "&iexcl;",     :type => "ISOnum",      :udesc => "INVERTED EXCLAMATION MARK" },
  "cent"      => { :hex => 0x00A2,	:entity => "&cent;",      :type => "ISOnum",      :udesc => "CENT SIGN" },
  "pound"     => { :hex => 0x00A3,	:entity => "&pound;",     :type => "ISOnum",      :udesc => "POUND SIGN" },
  "curren"    => { :hex => 0x00A4,	:entity => "&curren;",    :type => "ISOnum",      :udesc => "CURRENCY SIGN" },
  "yen"       => { :hex => 0x00A5,	:entity => "&yen;",       :type => "ISOnum",      :udesc => "YEN SIGN" },
  "brvbar"    => { :hex => 0x00A6,	:entity => "&brvbar;",    :type => "ISOnum",      :udesc => "BROKEN BAR" },
  "sect"      => { :hex => 0x00A7,	:entity => "&sect;",      :type => "ISOnum",      :udesc => "SECTION SIGN" },
  "Dot"       => { :hex => 0x00A8,	:entity => "&Dot;",       :type => "ISOtech",     :udesc => "DIAERESIS" },
  "die"       => { :hex => 0x00A8,	:entity => "&die;",       :type => "ISOdia",      :udesc => "DIAERESIS" },
  "uml"       => { :hex => 0x00A8,	:entity => "&uml;",       :type => "ISOdia",      :udesc => "DIAERESIS" },
  "copy"      => { :hex => 0x00A9,	:entity => "&copy;",      :type => "ISOnum",      :udesc => "COPYRIGHT SIGN" },
  "ordf"      => { :hex => 0x00AA,	:entity => "&ordf;",      :type => "ISOnum",      :udesc => "FEMININE ORDINAL INDICATOR" },
  "laquo"     => { :hex => 0x00AB,	:entity => "&laquo;",     :type => "ISOnum",      :udesc => "LEFT-POINTING DOUBLE ANGLE QUOTATION MARK" },
  "not"       => { :hex => 0x00AC,	:entity => "&not;",       :type => "ISOnum",      :udesc => "NOT SIGN" },
  "shy"       => { :hex => 0x00AD,	:entity => "&shy;",       :type => "ISOnum",      :udesc => "SOFT HYPHEN" },
  "reg"       => { :hex => 0x00AE,	:entity => "&reg;",       :type => "ISOnum",      :udesc => "REGISTERED SIGN" },
  "macr"      => { :hex => 0x00AF,	:entity => "&macr;",      :type => "ISOdia",      :udesc => "MACRON" },
  "deg"       => { :hex => 0x00B0,	:entity => "&deg;",       :type => "ISOnum",      :udesc => "DEGREE SIGN" },
  "plusmn"    => { :hex => 0x00B1,	:entity => "&plusmn;",    :type => "ISOnum",      :udesc => "PLUS-MINUS SIGN" },
  "sup2"      => { :hex => 0x00B2,	:entity => "&sup2;",      :type => "ISOnum",      :udesc => "SUPERSCRIPT TWO" },
  "sup3"      => { :hex => 0x00B3,	:entity => "&sup3;",      :type => "ISOnum",      :udesc => "SUPERSCRIPT THREE" },
  "acute"     => { :hex => 0x00B4,	:entity => "&acute;",     :type => "ISOdia",      :udesc => "ACUTE ACCENT" },
  "micro"     => { :hex => 0x00B5,	:entity => "&micro;",     :type => "ISOnum",      :udesc => "MICRO SIGN" },
  "para"      => { :hex => 0x00B6,	:entity => "&para;",      :type => "ISOnum",      :udesc => "PILCROW SIGN" },
  "middot"    => { :hex => 0x00B7,	:entity => "&middot;",    :type => "ISOnum",      :udesc => "MIDDLE DOT" },
  "cedil"     => { :hex => 0x00B8,	:entity => "&cedil;",     :type => "ISOdia",      :udesc => "CEDILLA" },
  "sup1"      => { :hex => 0x00B9,	:entity => "&sup1;",      :type => "ISOnum",      :udesc => "SUPERSCRIPT ONE" },
  "ordm"      => { :hex => 0x00BA,	:entity => "&ordm;",      :type => "ISOnum",      :udesc => "MASCULINE ORDINAL INDICATOR" },
  "raquo"     => { :hex => 0x00BB,	:entity => "&raquo;",     :type => "ISOnum",      :udesc => "RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK" },
  "frac14"    => { :hex => 0x00BC,	:entity => "&frac14;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION ONE QUARTER" },
  "frac12"    => { :hex => 0x00BD,	:entity => "&frac12;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION ONE HALF" },
  "half"      => { :hex => 0x00BD,	:entity => "&half;",      :type => "ISOnum",      :udesc => "VULGAR FRACTION ONE HALF" },
  "frac34"    => { :hex => 0x00BE,	:entity => "&frac34;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION THREE QUARTERS" },
  "iquest"    => { :hex => 0x00BF,	:entity => "&iquest;",    :type => "ISOnum",      :udesc => "INVERTED QUESTION MARK" },
  "Agrave"    => { :hex => 0x00C0,	:entity => "&Agrave;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER A WITH GRAVE" },
  "Aacute"    => { :hex => 0x00C1,	:entity => "&Aacute;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER A WITH ACUTE" },
  "Acirc"     => { :hex => 0x00C2,	:entity => "&Acirc;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER A WITH CIRCUMFLEX" },
  "Atilde"    => { :hex => 0x00C3,	:entity => "&Atilde;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER A WITH TILDE" },
  "Auml"      => { :hex => 0x00C4,	:entity => "&Auml;",      :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER A WITH DIAERESIS" },
  "Aring"     => { :hex => 0x00C5,	:entity => "&Aring;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER A WITH RING ABOVE" },
  "AElig"     => { :hex => 0x00C6,	:entity => "&AElig;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER AE" },
  "Ccedil"    => { :hex => 0x00C7,	:entity => "&Ccedil;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER C WITH CEDILLA" },
  "Egrave"    => { :hex => 0x00C8,	:entity => "&Egrave;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER E WITH GRAVE" },
  "Eacute"    => { :hex => 0x00C9,	:entity => "&Eacute;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER E WITH ACUTE" },
  "Ecirc"     => { :hex => 0x00CA,	:entity => "&Ecirc;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER E WITH CIRCUMFLEX" },
  "Euml"      => { :hex => 0x00CB,	:entity => "&Euml;",      :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER E WITH DIAERESIS" },
  "Igrave"    => { :hex => 0x00CC,	:entity => "&Igrave;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER I WITH GRAVE" },
  "Iacute"    => { :hex => 0x00CD,	:entity => "&Iacute;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER I WITH ACUTE" },
  "Icirc"     => { :hex => 0x00CE,	:entity => "&Icirc;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER I WITH CIRCUMFLEX" },
  "Iuml"      => { :hex => 0x00CF,	:entity => "&Iuml;",      :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER I WITH DIAERESIS" },
  "ETH"       => { :hex => 0x00D0,	:entity => "&ETH;",       :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER ETH" },
  "Ntilde"    => { :hex => 0x00D1,	:entity => "&Ntilde;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER N WITH TILDE" },
  "Ograve"    => { :hex => 0x00D2,	:entity => "&Ograve;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER O WITH GRAVE" },
  "Oacute"    => { :hex => 0x00D3,	:entity => "&Oacute;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER O WITH ACUTE" },
  "Ocirc"     => { :hex => 0x00D4,	:entity => "&Ocirc;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER O WITH CIRCUMFLEX" },
  "Otilde"    => { :hex => 0x00D5,	:entity => "&Otilde;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER O WITH TILDE" },
  "Ouml"      => { :hex => 0x00D6,	:entity => "&Ouml;",      :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER O WITH DIAERESIS" },
  "times"     => { :hex => 0x00D7,	:entity => "&times;",     :type => "ISOnum",      :udesc => "MULTIPLICATION SIGN" },
  "Oslash"    => { :hex => 0x00D8,	:entity => "&Oslash;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER O WITH STROKE" },
  "Ugrave"    => { :hex => 0x00D9,	:entity => "&Ugrave;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER U WITH GRAVE" },
  "Uacute"    => { :hex => 0x00DA,	:entity => "&Uacute;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER U WITH ACUTE" },
  "Ucirc"     => { :hex => 0x00DB,	:entity => "&Ucirc;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER U WITH CIRCUMFLEX" },
  "Uuml"      => { :hex => 0x00DC,	:entity => "&Uuml;",      :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER U WITH DIAERESIS" },
  "Yacute"    => { :hex => 0x00DD,	:entity => "&Yacute;",    :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER Y WITH ACUTE" },
  "THORN"     => { :hex => 0x00DE,	:entity => "&THORN;",     :type => "ISOlat1",     :udesc => "LATIN CAPITAL LETTER THORN" },
  "szlig"     => { :hex => 0x00DF,	:entity => "&szlig;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER SHARP S" },
  "agrave"    => { :hex => 0x00E0,	:entity => "&agrave;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER A WITH GRAVE" },
  "aacute"    => { :hex => 0x00E1,	:entity => "&aacute;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER A WITH ACUTE" },
  "acirc"     => { :hex => 0x00E2,	:entity => "&acirc;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER A WITH CIRCUMFLEX" },
  "atilde"    => { :hex => 0x00E3,	:entity => "&atilde;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER A WITH TILDE" },
  "auml"      => { :hex => 0x00E4,	:entity => "&auml;",      :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER A WITH DIAERESIS" },
  "aring"     => { :hex => 0x00E5,	:entity => "&aring;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER A WITH RING ABOVE" },
  "aelig"     => { :hex => 0x00E6,	:entity => "&aelig;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER AE" },
  "ccedil"    => { :hex => 0x00E7,	:entity => "&ccedil;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER C WITH CEDILLA" },
  "egrave"    => { :hex => 0x00E8,	:entity => "&egrave;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER E WITH GRAVE" },
  "eacute"    => { :hex => 0x00E9,	:entity => "&eacute;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER E WITH ACUTE" },
  "ecirc"     => { :hex => 0x00EA,	:entity => "&ecirc;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER E WITH CIRCUMFLEX" },
  "euml"      => { :hex => 0x00EB,	:entity => "&euml;",      :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER E WITH DIAERESIS" },
  "igrave"    => { :hex => 0x00EC,	:entity => "&igrave;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER I WITH GRAVE" },
  "iacute"    => { :hex => 0x00ED,	:entity => "&iacute;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER I WITH ACUTE" },
  "icirc"     => { :hex => 0x00EE,	:entity => "&icirc;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER I WITH CIRCUMFLEX" },
  "iuml"      => { :hex => 0x00EF,	:entity => "&iuml;",      :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER I WITH DIAERESIS" },
  "eth"       => { :hex => 0x00F0,	:entity => "&eth;",       :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER ETH" },
  "ntilde"    => { :hex => 0x00F1,	:entity => "&ntilde;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER N WITH TILDE" },
  "ograve"    => { :hex => 0x00F2,	:entity => "&ograve;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER O WITH GRAVE" },
  "oacute"    => { :hex => 0x00F3,	:entity => "&oacute;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER O WITH ACUTE" },
  "ocirc"     => { :hex => 0x00F4,	:entity => "&ocirc;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER O WITH CIRCUMFLEX" },
  "otilde"    => { :hex => 0x00F5,	:entity => "&otilde;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER O WITH TILDE" },
  "ouml"      => { :hex => 0x00F6,	:entity => "&ouml;",      :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER O WITH DIAERESIS" },
  "divide"    => { :hex => 0x00F7,	:entity => "&divide;",    :type => "ISOnum",      :udesc => "DIVISION SIGN" },
  "oslash"    => { :hex => 0x00F8,	:entity => "&oslash;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER O WITH STROKE" },
  "ugrave"    => { :hex => 0x00F9,	:entity => "&ugrave;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER U WITH GRAVE" },
  "uacute"    => { :hex => 0x00FA,	:entity => "&uacute;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER U WITH ACUTE" },
  "ucirc"     => { :hex => 0x00FB,	:entity => "&ucirc;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER U WITH CIRCUMFLEX" },
  "uuml"      => { :hex => 0x00FC,	:entity => "&uuml;",      :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER U WITH DIAERESIS" },
  "yacute"    => { :hex => 0x00FD,	:entity => "&yacute;",    :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER Y WITH ACUTE" },
  "thorn"     => { :hex => 0x00FE,	:entity => "&thorn;",     :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER THORN" },
  "yuml"      => { :hex => 0x00FF,	:entity => "&yuml;",      :type => "ISOlat1",     :udesc => "LATIN SMALL LETTER Y WITH DIAERESIS" },
  "Amacr"     => { :hex => 0x0100,	:entity => "&Amacr;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER A WITH MACRON" },
  "amacr"     => { :hex => 0x0101,	:entity => "&amacr;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER A WITH MACRON" },
  "Abreve"    => { :hex => 0x0102,	:entity => "&Abreve;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER A WITH BREVE" },
  "abreve"    => { :hex => 0x0103,	:entity => "&abreve;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER A WITH BREVE" },
  "Aogon"     => { :hex => 0x0104,	:entity => "&Aogon;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER A WITH OGONEK" },
  "aogon"     => { :hex => 0x0105,	:entity => "&aogon;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER A WITH OGONEK" },
  "Cacute"    => { :hex => 0x0106,	:entity => "&Cacute;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER C WITH ACUTE" },
  "cacute"    => { :hex => 0x0107,	:entity => "&cacute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER C WITH ACUTE" },
  "Ccirc"     => { :hex => 0x0108,	:entity => "&Ccirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER C WITH CIRCUMFLEX" },
  "ccirc"     => { :hex => 0x0109,	:entity => "&ccirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER C WITH CIRCUMFLEX" },
  "Cdot"      => { :hex => 0x010A,	:entity => "&Cdot;",      :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER C WITH DOT ABOVE" },
  "cdot"      => { :hex => 0x010B,	:entity => "&cdot;",      :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER C WITH DOT ABOVE" },
  "Ccaron"    => { :hex => 0x010C,	:entity => "&Ccaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER C WITH CARON" },
  "ccaron"    => { :hex => 0x010D,	:entity => "&ccaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER C WITH CARON" },
  "Dcaron"    => { :hex => 0x010E,	:entity => "&Dcaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER D WITH CARON" },
  "dcaron"    => { :hex => 0x010F,	:entity => "&dcaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER D WITH CARON" },
  "Dstrok"    => { :hex => 0x0110,	:entity => "&Dstrok;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER D WITH STROKE" },
  "dstrok"    => { :hex => 0x0111,	:entity => "&dstrok;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER D WITH STROKE" },
  "Emacr"     => { :hex => 0x0112,	:entity => "&Emacr;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER E WITH MACRON" },
  "emacr"     => { :hex => 0x0113,	:entity => "&emacr;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER E WITH MACRON" },
  "Edot"      => { :hex => 0x0116,	:entity => "&Edot;",      :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER E WITH DOT ABOVE" },
  "edot"      => { :hex => 0x0117,	:entity => "&edot;",      :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER E WITH DOT ABOVE" },
  "Eogon"     => { :hex => 0x0118,	:entity => "&Eogon;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER E WITH OGONEK" },
  "eogon"     => { :hex => 0x0119,	:entity => "&eogon;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER E WITH OGONEK" },
  "Ecaron"    => { :hex => 0x011A,	:entity => "&Ecaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER E WITH CARON" },
  "ecaron"    => { :hex => 0x011B,	:entity => "&ecaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER E WITH CARON" },
  "Gcirc"     => { :hex => 0x011C,	:entity => "&Gcirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER G WITH CIRCUMFLEX" },
  "gcirc"     => { :hex => 0x011D,	:entity => "&gcirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER G WITH CIRCUMFLEX" },
  "Gbreve"    => { :hex => 0x011E,	:entity => "&Gbreve;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER G WITH BREVE" },
  "gbreve"    => { :hex => 0x011F,	:entity => "&gbreve;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER G WITH BREVE" },
  "Gdot"      => { :hex => 0x0120,	:entity => "&Gdot;",      :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER G WITH DOT ABOVE" },
  "gdot"      => { :hex => 0x0121,	:entity => "&gdot;",      :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER G WITH DOT ABOVE" },
  "Gcedil"    => { :hex => 0x0122,	:entity => "&Gcedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER G WITH CEDILLA" },
  "gcedil"    => { :hex => 0x0123,	:entity => "&gcedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER G WITH CEDILLA" },
  "Hcirc"     => { :hex => 0x0124,	:entity => "&Hcirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER H WITH CIRCUMFLEX" },
  "hcirc"     => { :hex => 0x0125,	:entity => "&hcirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER H WITH CIRCUMFLEX" },
  "Hstrok"    => { :hex => 0x0126,	:entity => "&Hstrok;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER H WITH STROKE" },
  "hstrok"    => { :hex => 0x0127,	:entity => "&hstrok;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER H WITH STROKE" },
  "Itilde"    => { :hex => 0x0128,	:entity => "&Itilde;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER I WITH TILDE" },
  "itilde"    => { :hex => 0x0129,	:entity => "&itilde;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER I WITH TILDE" },
  "Imacr"     => { :hex => 0x012A,	:entity => "&Imacr;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER I WITH MACRON" },
  "imacr"     => { :hex => 0x012B,	:entity => "&imacr;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER I WITH MACRON" },
  "Iogon"     => { :hex => 0x012E,	:entity => "&Iogon;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER I WITH OGONEK" },
  "iogon"     => { :hex => 0x012F,	:entity => "&iogon;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER I WITH OGONEK" },
  "Idot"      => { :hex => 0x0130,	:entity => "&Idot;",      :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER I WITH DOT ABOVE" },
  "inodot"    => { :hex => 0x0131,	:entity => "&inodot;",    :type => "ISOamso",     :udesc => "LATIN SMALL LETTER DOTLESS I" },
  "inodot"    => { :hex => 0x0131,	:entity => "&inodot;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER DOTLESS I" },
  "IJlig"     => { :hex => 0x0132,	:entity => "&IJlig;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LIGATURE IJ" },
  "ijlig"     => { :hex => 0x0133,	:entity => "&ijlig;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LIGATURE IJ" },
  "Jcirc"     => { :hex => 0x0134,	:entity => "&Jcirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER J WITH CIRCUMFLEX" },
  "jcirc"     => { :hex => 0x0135,	:entity => "&jcirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER J WITH CIRCUMFLEX" },
  "Kcedil"    => { :hex => 0x0136,	:entity => "&Kcedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER K WITH CEDILLA" },
  "kcedil"    => { :hex => 0x0137,	:entity => "&kcedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER K WITH CEDILLA" },
  "kgreen"    => { :hex => 0x0138,	:entity => "&kgreen;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER KRA" },
  "Lacute"    => { :hex => 0x0139,	:entity => "&Lacute;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER L WITH ACUTE" },
  "lacute"    => { :hex => 0x013A,	:entity => "&lacute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER L WITH ACUTE" },
  "Lcedil"    => { :hex => 0x013B,	:entity => "&Lcedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER L WITH CEDILLA" },
  "lcedil"    => { :hex => 0x013C,	:entity => "&lcedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER L WITH CEDILLA" },
  "Lcaron"    => { :hex => 0x013D,	:entity => "&Lcaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER L WITH CARON" },
  "lcaron"    => { :hex => 0x013E,	:entity => "&lcaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER L WITH CARON" },
  "Lmidot"    => { :hex => 0x013F,	:entity => "&Lmidot;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER L WITH MIDDLE DOT" },
  "lmidot"    => { :hex => 0x0140,	:entity => "&lmidot;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER L WITH MIDDLE DOT" },
  "Lstrok"    => { :hex => 0x0141,	:entity => "&Lstrok;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER L WITH STROKE" },
  "lstrok"    => { :hex => 0x0142,	:entity => "&lstrok;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER L WITH STROKE" },
  "Nacute"    => { :hex => 0x0143,	:entity => "&Nacute;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER N WITH ACUTE" },
  "nacute"    => { :hex => 0x0144,	:entity => "&nacute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER N WITH ACUTE" },
  "Ncedil"    => { :hex => 0x0145,	:entity => "&Ncedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER N WITH CEDILLA" },
  "ncedil"    => { :hex => 0x0146,	:entity => "&ncedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER N WITH CEDILLA" },
  "Ncaron"    => { :hex => 0x0147,	:entity => "&Ncaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER N WITH CARON" },
  "ncaron"    => { :hex => 0x0148,	:entity => "&ncaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER N WITH CARON" },
  "napos"     => { :hex => 0x0149,	:entity => "&napos;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER N PRECEDED BY APOSTROPHE" },
  "ENG"       => { :hex => 0x014A,	:entity => "&ENG;",       :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER ENG" },
  "eng"       => { :hex => 0x014B,	:entity => "&eng;",       :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER ENG" },
  "Omacr"     => { :hex => 0x014C,	:entity => "&Omacr;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER O WITH MACRON" },
  "omacr"     => { :hex => 0x014D,	:entity => "&omacr;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER O WITH MACRON" },
  "Odblac"    => { :hex => 0x0150,	:entity => "&Odblac;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER O WITH DOUBLE ACUTE" },
  "odblac"    => { :hex => 0x0151,	:entity => "&odblac;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER O WITH DOUBLE ACUTE" },
  "OElig"     => { :hex => 0x0152,	:entity => "&OElig;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LIGATURE OE" },
  "oelig"     => { :hex => 0x0153,	:entity => "&oelig;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LIGATURE OE" },
  "Racute"    => { :hex => 0x0154,	:entity => "&Racute;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER R WITH ACUTE" },
  "racute"    => { :hex => 0x0155,	:entity => "&racute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER R WITH ACUTE" },
  "Rcedil"    => { :hex => 0x0156,	:entity => "&Rcedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER R WITH CEDILLA" },
  "rcedil"    => { :hex => 0x0157,	:entity => "&rcedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER R WITH CEDILLA" },
  "Rcaron"    => { :hex => 0x0158,	:entity => "&Rcaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER R WITH CARON" },
  "rcaron"    => { :hex => 0x0159,	:entity => "&rcaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER R WITH CARON" },
  "Sacute"    => { :hex => 0x015A,	:entity => "&Sacute;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER S WITH ACUTE" },
  "sacute"    => { :hex => 0x015B,	:entity => "&sacute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER S WITH ACUTE" },
  "Scirc"     => { :hex => 0x015C,	:entity => "&Scirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER S WITH CIRCUMFLEX" },
  "scirc"     => { :hex => 0x015D,	:entity => "&scirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER S WITH CIRCUMFLEX" },
  "Scedil"    => { :hex => 0x015E,	:entity => "&Scedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER S WITH CEDILLA" },
  "scedil"    => { :hex => 0x015F,	:entity => "&scedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER S WITH CEDILLA" },
  "Scaron"    => { :hex => 0x0160,	:entity => "&Scaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER S WITH CARON" },
  "scaron"    => { :hex => 0x0161,	:entity => "&scaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER S WITH CARON" },
  "Tcedil"    => { :hex => 0x0162,	:entity => "&Tcedil;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER T WITH CEDILLA" },
  "tcedil"    => { :hex => 0x0163,	:entity => "&tcedil;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER T WITH CEDILLA" },
  "Tcaron"    => { :hex => 0x0164,	:entity => "&Tcaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER T WITH CARON" },
  "tcaron"    => { :hex => 0x0165,	:entity => "&tcaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER T WITH CARON" },
  "Tstrok"    => { :hex => 0x0166,	:entity => "&Tstrok;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER T WITH STROKE" },
  "tstrok"    => { :hex => 0x0167,	:entity => "&tstrok;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER T WITH STROKE" },
  "Utilde"    => { :hex => 0x0168,	:entity => "&Utilde;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER U WITH TILDE" },
  "utilde"    => { :hex => 0x0169,	:entity => "&utilde;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER U WITH TILDE" },
  "Umacr"     => { :hex => 0x016A,	:entity => "&Umacr;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER U WITH MACRON" },
  "umacr"     => { :hex => 0x016B,	:entity => "&umacr;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER U WITH MACRON" },
  "Ubreve"    => { :hex => 0x016C,	:entity => "&Ubreve;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER U WITH BREVE" },
  "ubreve"    => { :hex => 0x016D,	:entity => "&ubreve;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER U WITH BREVE" },
  "Uring"     => { :hex => 0x016E,	:entity => "&Uring;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER U WITH RING ABOVE" },
  "uring"     => { :hex => 0x016F,	:entity => "&uring;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER U WITH RING ABOVE" },
  "Udblac"    => { :hex => 0x0170,	:entity => "&Udblac;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER U WITH DOUBLE ACUTE" },
  "udblac"    => { :hex => 0x0171,	:entity => "&udblac;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER U WITH DOUBLE ACUTE" },
  "Uogon"     => { :hex => 0x0172,	:entity => "&Uogon;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER U WITH OGONEK" },
  "uogon"     => { :hex => 0x0173,	:entity => "&uogon;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER U WITH OGONEK" },
  "Wcirc"     => { :hex => 0x0174,	:entity => "&Wcirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER W WITH CIRCUMFLEX" },
  "wcirc"     => { :hex => 0x0175,	:entity => "&wcirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER W WITH CIRCUMFLEX" },
  "Ycirc"     => { :hex => 0x0176,	:entity => "&Ycirc;",     :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER Y WITH CIRCUMFLEX" },
  "ycirc"     => { :hex => 0x0177,	:entity => "&ycirc;",     :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER Y WITH CIRCUMFLEX" },
  "Yuml"      => { :hex => 0x0178,	:entity => "&Yuml;",      :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER Y WITH DIAERESIS" },
  "Zacute"    => { :hex => 0x0179,	:entity => "&Zacute;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER Z WITH ACUTE" },
  "zacute"    => { :hex => 0x017A,	:entity => "&zacute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER Z WITH ACUTE" },
  "Zdot"      => { :hex => 0x017B,	:entity => "&Zdot;",      :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER Z WITH DOT ABOVE" },
  "zdot"      => { :hex => 0x017C,	:entity => "&zdot;",      :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER Z WITH DOT ABOVE" },
  "Zcaron"    => { :hex => 0x017D,	:entity => "&Zcaron;",    :type => "ISOlat2",     :udesc => "LATIN CAPITAL LETTER Z WITH CARON" },
  "zcaron"    => { :hex => 0x017E,	:entity => "&zcaron;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER Z WITH CARON" },
  "fnof"      => { :hex => 0x0192,	:entity => "&fnof;",      :type => "ISOtech",     :udesc => "LATIN SMALL LETTER F WITH HOOK" },
  "gacute"    => { :hex => 0x01F5,	:entity => "&gacute;",    :type => "ISOlat2",     :udesc => "LATIN SMALL LETTER G WITH ACUTE" },
  "apos"      => { :hex => 0x02BC,	:entity => "&apos;",      :type => "ISOnum",      :udesc => "MODIFIER LETTER APOSTROPHE" },
  "circ"      => { :hex => 0x02C6,	:entity => "&circ;",      :type => "ISOdia",      :udesc => "MODIFIER LETTER CIRCUMFLEX ACCENT" },
  "caron"     => { :hex => 0x02C7,	:entity => "&caron;",     :type => "ISOdia",      :udesc => "CARON" },
  "breve"     => { :hex => 0x02D8,	:entity => "&breve;",     :type => "ISOdia",      :udesc => "BREVE" },
  "dot"       => { :hex => 0x02D9,	:entity => "&dot;",       :type => "ISOdia",      :udesc => "DOT ABOVE" },
  "ring"      => { :hex => 0x02DA,	:entity => "&ring;",      :type => "ISOdia",      :udesc => "RING ABOVE" },
  "ogon"      => { :hex => 0x02DB,	:entity => "&ogon;",      :type => "ISOdia",      :udesc => "OGONEK" },
  "tilde"     => { :hex => 0x02DC,	:entity => "&tilde;",     :type => "ISOdia",      :udesc => "SMALL TILDE" },
  "dblac"     => { :hex => 0x02DD,	:entity => "&dblac;",     :type => "ISOdia",      :udesc => "DOUBLE ACUTE ACCENT" },
  "Aacgr"     => { :hex => 0x0386,	:entity => "&Aacgr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER ALPHA WITH TONOS" },
  "Eacgr"     => { :hex => 0x0388,	:entity => "&Eacgr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER EPSILON WITH TONOS" },
  "EEacgr"    => { :hex => 0x0389,	:entity => "&EEacgr;",    :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER ETA WITH TONOS" },
  "Iacgr"     => { :hex => 0x038A,	:entity => "&Iacgr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER IOTA WITH TONOS" },
  "Oacgr"     => { :hex => 0x038C,	:entity => "&Oacgr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER OMICRON WITH TONOS" },
  "Uacgr"     => { :hex => 0x038E,	:entity => "&Uacgr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER UPSILON WITH TONOS" },
  "OHacgr"    => { :hex => 0x038F,	:entity => "&OHacgr;",    :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER OMEGA WITH TONOS" },
  "idiagr"    => { :hex => 0x0390,	:entity => "&idiagr;",    :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS" },
  "Agr"       => { :hex => 0x0391,	:entity => "&Agr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER ALPHA" },
  "Alpha"     => { :hex => 0x0391,	:entity => "&Alpha;",     :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER ALPHA" },
  "Beta"      => { :hex => 0x0392,	:entity => "&Beta;",      :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER BETA" },
  "Bgr"       => { :hex => 0x0392,	:entity => "&Bgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER BETA" },
  "Gamma"     => { :hex => 0x0393,	:entity => "&Gamma;",     :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER GAMMA" },
  "Ggr"       => { :hex => 0x0393,	:entity => "&Ggr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER GAMMA" },
  "b.Gamma"   => { :hex => 0x0393,	:entity => "&b.Gamma;",   :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER GAMMA" },
  "Delta"     => { :hex => 0x0394,	:entity => "&Delta;",     :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER DELTA" },
  "Dgr"       => { :hex => 0x0394,	:entity => "&Dgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER DELTA" },
  "b.Delta"   => { :hex => 0x0394,	:entity => "&b.Delta;",   :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER DELTA" },
  "Egr"       => { :hex => 0x0395,	:entity => "&Egr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER EPSILON" },
  "Epsilon"   => { :hex => 0x0395,	:entity => "&Epsilon;",   :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER EPSILON" },
  "Zeta"      => { :hex => 0x0396,	:entity => "&Zeta;",      :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER ZETA" },
  "Zgr"       => { :hex => 0x0396,	:entity => "&Zgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER ZETA" },
  "EEgr"      => { :hex => 0x0397,	:entity => "&EEgr;",      :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER ETA" },
  "Eta"       => { :hex => 0x0397,	:entity => "&Eta;",       :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER ETA" },
  "THgr"      => { :hex => 0x0398,	:entity => "&THgr;",      :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER THETA" },
  "Theta"     => { :hex => 0x0398,	:entity => "&Theta;",     :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER THETA" },
  "b.Theta"   => { :hex => 0x0398,	:entity => "&b.Theta;",   :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER THETA" },
  "Igr"       => { :hex => 0x0399,	:entity => "&Igr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER IOTA" },
  "Iota"      => { :hex => 0x0399,	:entity => "&Iota;",      :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER IOTA" },
  "Kappa"     => { :hex => 0x039A,	:entity => "&Kappa;",     :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER KAPPA" },
  "Kgr"       => { :hex => 0x039A,	:entity => "&Kgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER KAPPA" },
  "Lambda"    => { :hex => 0x039B,	:entity => "&Lambda;",    :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER LAMDA" },
  "Lgr"       => { :hex => 0x039B,	:entity => "&Lgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER LAMDA" },
  "b.Lambda"  => { :hex => 0x039B,	:entity => "&b.Lambda;",  :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER LAMDA" },
  "Mgr"       => { :hex => 0x039C,	:entity => "&Mgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER MU" },
  "Mu"        => { :hex => 0x039C,	:entity => "&Mu;",        :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER MU" },
  "Ngr"       => { :hex => 0x039D,	:entity => "&Ngr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER NU" },
  "Nu"        => { :hex => 0x039D,	:entity => "&Nu;",        :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER NU" },
  "Xgr"       => { :hex => 0x039E,	:entity => "&Xgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER XI" },
  "Xi"        => { :hex => 0x039E,	:entity => "&Xi;",        :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER XI" },
  "b.Xi"      => { :hex => 0x039E,	:entity => "&b.Xi;",      :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER XI" },
  "Ogr"       => { :hex => 0x039F,	:entity => "&Ogr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER OMICRON" },
  "Omicron"   => { :hex => 0x039F,	:entity => "&Omicron;",   :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER OMICRON" },
  "Pgr"       => { :hex => 0x03A0,	:entity => "&Pgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER PI" },
  "Pi"        => { :hex => 0x03A0,	:entity => "&Pi;",        :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER PI" },
  "b.Pi"      => { :hex => 0x03A0,	:entity => "&b.Pi;",      :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER PI" },
  "Rgr"       => { :hex => 0x03A1,	:entity => "&Rgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER RHO" },
  "Rho"       => { :hex => 0x03A1,	:entity => "&Rho;",       :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER RHO" },
  "Sgr"       => { :hex => 0x03A3,	:entity => "&Sgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER SIGMA" },
  "Sigma"     => { :hex => 0x03A3,	:entity => "&Sigma;",     :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER SIGMA" },
  "b.Sigma"   => { :hex => 0x03A3,	:entity => "&b.Sigma;",   :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER SIGMA" },
  "Tau"       => { :hex => 0x03A4,	:entity => "&Tau;",       :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER TAU" },
  "Tgr"       => { :hex => 0x03A4,	:entity => "&Tgr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER TAU" },
  "Ugr"       => { :hex => 0x03A5,	:entity => "&Ugr;",       :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER UPSILON" },
  "Upsi"      => { :hex => 0x03A5,	:entity => "&Upsi;",      :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER UPSILON" },
  "Upsilon"   => { :hex => 0x03A5,	:entity => "&Upsilon;",   :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER UPSILON" },
  "b.Upsi"    => { :hex => 0x03A5,	:entity => "&b.Upsi;",    :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER UPSILON" },
  "PHgr"      => { :hex => 0x03A6,	:entity => "&PHgr;",      :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER PHI" },
  "Phi"       => { :hex => 0x03A6,	:entity => "&Phi;",       :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER PHI" },
  "b.Phi"     => { :hex => 0x03A6,	:entity => "&b.Phi;",     :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER PHI" },
  "Chi"       => { :hex => 0x03A7,	:entity => "&Chi;",       :type => "HTMLsymbol",  :udesc => "GREEK CAPITAL LETTER CHI" },
  "KHgr"      => { :hex => 0x03A7,	:entity => "&KHgr;",      :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER CHI" },
  "PSgr"      => { :hex => 0x03A8,	:entity => "&PSgr;",      :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER PSI" },
  "Psi"       => { :hex => 0x03A8,	:entity => "&Psi;",       :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER PSI" },
  "b.Psi"     => { :hex => 0x03A8,	:entity => "&b.Psi;",     :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER PSI" },
  "OHgr"      => { :hex => 0x03A9,	:entity => "&OHgr;",      :type => "ISOgrk1",     :udesc => "GREEK CAPITAL LETTER OMEGA" },
  "Omega"     => { :hex => 0x03A9,	:entity => "&Omega;",     :type => "ISOgrk3",     :udesc => "GREEK CAPITAL LETTER OMEGA" },
  "b.Omega"   => { :hex => 0x03A9,	:entity => "&b.Omega;",   :type => "ISOgrk4",     :udesc => "GREEK CAPITAL LETTER OMEGA" },
  "Idigr"     => { :hex => 0x03AA,	:entity => "&Idigr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER IOTA WITH DIALYTIKA" },
  "Udigr"     => { :hex => 0x03AB,	:entity => "&Udigr;",     :type => "ISOgrk2",     :udesc => "GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA" },
  "aacgr"     => { :hex => 0x03AC,	:entity => "&aacgr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER ALPHA WITH TONOS" },
  "eacgr"     => { :hex => 0x03AD,	:entity => "&eacgr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER EPSILON WITH TONOS" },
  "eeacgr"    => { :hex => 0x03AE,	:entity => "&eeacgr;",    :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER ETA WITH TONOS" },
  "iacgr"     => { :hex => 0x03AF,	:entity => "&iacgr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER IOTA WITH TONOS" },
  "udiagr"    => { :hex => 0x03B0,	:entity => "&udiagr;",    :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND" },
  "agr"       => { :hex => 0x03B1,	:entity => "&agr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER ALPHA" },
  "alpha"     => { :hex => 0x03B1,	:entity => "&alpha;",     :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER ALPHA" },
  "b.alpha"   => { :hex => 0x03B1,	:entity => "&b.alpha;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER ALPHA" },
  "b.beta"    => { :hex => 0x03B2,	:entity => "&b.beta;",    :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER BETA" },
  "beta"      => { :hex => 0x03B2,	:entity => "&beta;",      :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER BETA" },
  "bgr"       => { :hex => 0x03B2,	:entity => "&bgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER BETA" },
  "b.gamma"   => { :hex => 0x03B3,	:entity => "&b.gamma;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER GAMMA" },
  "gamma"     => { :hex => 0x03B3,	:entity => "&gamma;",     :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER GAMMA" },
  "ggr"       => { :hex => 0x03B3,	:entity => "&ggr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER GAMMA" },
  "b.delta"   => { :hex => 0x03B4,	:entity => "&b.delta;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER DELTA" },
  "delta"     => { :hex => 0x03B4,	:entity => "&delta;",     :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER DELTA" },
  "dgr"       => { :hex => 0x03B4,	:entity => "&dgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER DELTA" },
  "b.epsi"    => { :hex => 0x03B5,	:entity => "&b.epsi;",    :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER EPSILON" },
  "b.epsis"   => { :hex => 0x03B5,	:entity => "&b.epsis;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER EPSILON" },
  "b.epsiv"   => { :hex => 0x03B5,	:entity => "&b.epsiv;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER EPSILON" },
  "egr"       => { :hex => 0x03B5,	:entity => "&egr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER EPSILON" },
  "epsi"      => { :hex => 0x03B5,	:entity => "&epsi;",      :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER EPSILON" },
  "epsilon"   => { :hex => 0x03B5,	:entity => "&epsilon;",   :type => "HTMLsymbol",  :udesc => "GREEK SMALL LETTER EPSILON" },
  "b.zeta"    => { :hex => 0x03B6,	:entity => "&b.zeta;",    :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER ZETA" },
  "zeta"      => { :hex => 0x03B6,	:entity => "&zeta;",      :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER ZETA" },
  "zgr"       => { :hex => 0x03B6,	:entity => "&zgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER ZETA" },
  "b.eta"     => { :hex => 0x03B7,	:entity => "&b.eta;",     :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER ETA" },
  "eegr"      => { :hex => 0x03B7,	:entity => "&eegr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER ETA" },
  "eta"       => { :hex => 0x03B7,	:entity => "&eta;",       :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER ETA" },
  "b.thetas"  => { :hex => 0x03B8,	:entity => "&b.thetas;",  :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER THETA" },
  "theta"     => { :hex => 0x03B8,	:entity => "&theta;",     :type => "HTMLsymbol",  :udesc => "GREEK SMALL LETTER THETA" },
  "thetas"    => { :hex => 0x03B8,	:entity => "&thetas;",    :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER THETA" },
  "thgr"      => { :hex => 0x03B8,	:entity => "&thgr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER THETA" },
  "b.iota"    => { :hex => 0x03B9,	:entity => "&b.iota;",    :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER IOTA" },
  "igr"       => { :hex => 0x03B9,	:entity => "&igr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER IOTA" },
  "iota"      => { :hex => 0x03B9,	:entity => "&iota;",      :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER IOTA" },
  "b.kappa"   => { :hex => 0x03BA,	:entity => "&b.kappa;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER KAPPA" },
  "kappa"     => { :hex => 0x03BA,	:entity => "&kappa;",     :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER KAPPA" },
  "kgr"       => { :hex => 0x03BA,	:entity => "&kgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER KAPPA" },
  "b.lambda"  => { :hex => 0x03BB,	:entity => "&b.lambda;",  :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER LAMDA" },
  "lambda"    => { :hex => 0x03BB,	:entity => "&lambda;",    :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER LAMDA" },
  "lgr"       => { :hex => 0x03BB,	:entity => "&lgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER LAMDA" },
  "b.mu"      => { :hex => 0x03BC,	:entity => "&b.mu;",      :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER MU" },
  "mgr"       => { :hex => 0x03BC,	:entity => "&mgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER MU" },
  "mu"        => { :hex => 0x03BC,	:entity => "&mu;",        :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER MU" },
  "b.nu"      => { :hex => 0x03BD,	:entity => "&b.nu;",      :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER NU" },
  "ngr"       => { :hex => 0x03BD,	:entity => "&ngr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER NU" },
  "nu"        => { :hex => 0x03BD,	:entity => "&nu;",        :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER NU" },
  "b.xi"      => { :hex => 0x03BE,	:entity => "&b.xi;",      :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER XI" },
  "xgr"       => { :hex => 0x03BE,	:entity => "&xgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER XI" },
  "xi"        => { :hex => 0x03BE,	:entity => "&xi;",        :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER XI" },
  "ogr"       => { :hex => 0x03BF,	:entity => "&ogr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER OMICRON" },
  "omicron"   => { :hex => 0x03BF,	:entity => "&omicron;",   :type => "HTMLsymbol",  :udesc => "GREEK SMALL LETTER OMICRON" },
  "b.pi"      => { :hex => 0x03C0,	:entity => "&b.pi;",      :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER PI" },
  "pgr"       => { :hex => 0x03C0,	:entity => "&pgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER PI" },
  "pi"        => { :hex => 0x03C0,	:entity => "&pi;",        :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER PI" },
  "b.rho"     => { :hex => 0x03C1,	:entity => "&b.rho;",     :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER RHO" },
  "rgr"       => { :hex => 0x03C1,	:entity => "&rgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER RHO" },
  "rho"       => { :hex => 0x03C1,	:entity => "&rho;",       :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER RHO" },
  "b.sigmav"  => { :hex => 0x03C2,	:entity => "&b.sigmav;",  :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER FINAL SIGMA" },
  "sfgr"      => { :hex => 0x03C2,	:entity => "&sfgr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER FINAL SIGMA" },
  "sigmaf"    => { :hex => 0x03C2,	:entity => "&sigmaf;",    :type => "HTMLsymbol",  :udesc => "GREEK SMALL LETTER FINAL SIGMA" },
  "sigmav"    => { :hex => 0x03C2,	:entity => "&sigmav;",    :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER FINAL SIGMA" },
  "b.sigma"   => { :hex => 0x03C3,	:entity => "&b.sigma;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER SIGMA" },
  "sgr"       => { :hex => 0x03C3,	:entity => "&sgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER SIGMA" },
  "sigma"     => { :hex => 0x03C3,	:entity => "&sigma;",     :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER SIGMA" },
  "b.tau"     => { :hex => 0x03C4,	:entity => "&b.tau;",     :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER TAU" },
  "tau"       => { :hex => 0x03C4,	:entity => "&tau;",       :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER TAU" },
  "tgr"       => { :hex => 0x03C4,	:entity => "&tgr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER TAU" },
  "b.upsi"    => { :hex => 0x03C5,	:entity => "&b.upsi;",    :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER UPSILON" },
  "ugr"       => { :hex => 0x03C5,	:entity => "&ugr;",       :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER UPSILON" },
  "upsi"      => { :hex => 0x03C5,	:entity => "&upsi;",      :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER UPSILON" },
  "upsilon"   => { :hex => 0x03C5,	:entity => "&upsilon;",   :type => "HTMLsymbol",  :udesc => "GREEK SMALL LETTER UPSILON" },
  "b.phis"    => { :hex => 0x03C6,	:entity => "&b.phis;",    :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER PHI" },
  "phgr"      => { :hex => 0x03C6,	:entity => "&phgr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER PHI" },
  "phi"       => { :hex => 0x03C6,	:entity => "&phi;",       :type => "HTMLsymbol",  :udesc => "GREEK SMALL LETTER PHI" },
  "phis"      => { :hex => 0x03C6,	:entity => "&phis;",      :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER PHI" },
  "b.chi"     => { :hex => 0x03C7,	:entity => "&b.chi;",     :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER CHI" },
  "chi"       => { :hex => 0x03C7,	:entity => "&chi;",       :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER CHI" },
  "khgr"      => { :hex => 0x03C7,	:entity => "&khgr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER CHI" },
  "b.psi"     => { :hex => 0x03C8,	:entity => "&b.psi;",     :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER PSI" },
  "psgr"      => { :hex => 0x03C8,	:entity => "&psgr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER PSI" },
  "psi"       => { :hex => 0x03C8,	:entity => "&psi;",       :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER PSI" },
  "ohgr"      => { :hex => 0x03C9,	:entity => "&ohgr;",      :type => "ISOgrk1",     :udesc => "GREEK SMALL LETTER OMEGA" },
  "omega"     => { :hex => 0x03C9,	:entity => "&omega;",     :type => "ISOgrk3",     :udesc => "GREEK SMALL LETTER OMEGA" },
  "idigr"     => { :hex => 0x03CA,	:entity => "&idigr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER IOTA WITH DIALYTIKA" },
  "udigr"     => { :hex => 0x03CB,	:entity => "&udigr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER UPSILON WITH DIALYTIKA" },
  "oacgr"     => { :hex => 0x03CC,	:entity => "&oacgr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER OMICRON WITH TONOS" },
  "uacgr"     => { :hex => 0x03CD,	:entity => "&uacgr;",     :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER UPSILON WITH TONOS" },
  "b.omega"   => { :hex => 0x03CE,	:entity => "&b.omega;",   :type => "ISOgrk4",     :udesc => "GREEK SMALL LETTER OMEGA WITH TONOS" },
  "ohacgr"    => { :hex => 0x03CE,	:entity => "&ohacgr;",    :type => "ISOgrk2",     :udesc => "GREEK SMALL LETTER OMEGA WITH TONOS" },
  "b.thetav"  => { :hex => 0x03D1,	:entity => "&b.thetav;",  :type => "ISOgrk4",     :udesc => "GREEK THETA SYMBOL" },
  "thetasym"  => { :hex => 0x03D1,	:entity => "&thetasym;",  :type => "HTMLsymbol",  :udesc => "GREEK THETA SYMBOL" },
  "thetav"    => { :hex => 0x03D1,	:entity => "&thetav;",    :type => "ISOgrk3",     :udesc => "GREEK THETA SYMBOL" },
  "upsih"     => { :hex => 0x03D2,	:entity => "&upsih;",     :type => "HTMLsymbol",  :udesc => "GREEK UPSILON WITH HOOK SYMBOL" },
  "b.phiv"    => { :hex => 0x03D5,	:entity => "&b.phiv;",    :type => "ISOgrk4",     :udesc => "GREEK PHI SYMBOL" },
  "phiv"      => { :hex => 0x03D5,	:entity => "&phiv;",      :type => "ISOgrk3",     :udesc => "GREEK PHI SYMBOL" },
  "b.piv"     => { :hex => 0x03D6,	:entity => "&b.piv;",     :type => "ISOgrk4",     :udesc => "GREEK PI SYMBOL" },
  "piv"       => { :hex => 0x03D6,	:entity => "&piv;",       :type => "ISOgrk3",     :udesc => "GREEK PI SYMBOL" },
  "b.gammad"  => { :hex => 0x03DC,	:entity => "&b.gammad;",  :type => "ISOgrk4",     :udesc => "GREEK LETTER DIGAMMA" },
  "gammad"    => { :hex => 0x03DC,	:entity => "&gammad;",    :type => "ISOgrk3",     :udesc => "GREEK LETTER DIGAMMA" },
  "b.kappav"  => { :hex => 0x03F0,	:entity => "&b.kappav;",  :type => "ISOgrk4",     :udesc => "GREEK KAPPA SYMBOL" },
  "kappav"    => { :hex => 0x03F0,	:entity => "&kappav;",    :type => "ISOgrk3",     :udesc => "GREEK KAPPA SYMBOL" },
  "b.rhov"    => { :hex => 0x03F1,	:entity => "&b.rhov;",    :type => "ISOgrk4",     :udesc => "GREEK RHO SYMBOL" },
  "rhov"      => { :hex => 0x03F1,	:entity => "&rhov;",      :type => "ISOgrk3",     :udesc => "GREEK RHO SYMBOL" },
  "IOcy"      => { :hex => 0x0401,	:entity => "&IOcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER IO" },
  "DJcy"      => { :hex => 0x0402,	:entity => "&DJcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER DJE" },
  "GJcy"      => { :hex => 0x0403,	:entity => "&GJcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER GJE" },
  "Jukcy"     => { :hex => 0x0404,	:entity => "&Jukcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER UKRAINIAN IE" },
  "DScy"      => { :hex => 0x0405,	:entity => "&DScy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER DZE" },
  "Iukcy"     => { :hex => 0x0406,	:entity => "&Iukcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I" },
  "YIcy"      => { :hex => 0x0407,	:entity => "&YIcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER YI" },
  "Jsercy"    => { :hex => 0x0408,	:entity => "&Jsercy;",    :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER JE" },
  "LJcy"      => { :hex => 0x0409,	:entity => "&LJcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER LJE" },
  "NJcy"      => { :hex => 0x040A,	:entity => "&NJcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER NJE" },
  "TSHcy"     => { :hex => 0x040B,	:entity => "&TSHcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER TSHE" },
  "KJcy"      => { :hex => 0x040C,	:entity => "&KJcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER KJE" },
  "Ubrcy"     => { :hex => 0x040E,	:entity => "&Ubrcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER SHORT U" },
  "DZcy"      => { :hex => 0x040F,	:entity => "&DZcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC CAPITAL LETTER DZHE" },
  "Acy"       => { :hex => 0x0410,	:entity => "&Acy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER A" },
  "Bcy"       => { :hex => 0x0411,	:entity => "&Bcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER BE" },
  "Vcy"       => { :hex => 0x0412,	:entity => "&Vcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER VE" },
  "Gcy"       => { :hex => 0x0413,	:entity => "&Gcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER GHE" },
  "Dcy"       => { :hex => 0x0414,	:entity => "&Dcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER DE" },
  "IEcy"      => { :hex => 0x0415,	:entity => "&IEcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER IE" },
  "ZHcy"      => { :hex => 0x0416,	:entity => "&ZHcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER ZHE" },
  "Zcy"       => { :hex => 0x0417,	:entity => "&Zcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER ZE" },
  "Icy"       => { :hex => 0x0418,	:entity => "&Icy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER I" },
  "Jcy"       => { :hex => 0x0419,	:entity => "&Jcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER SHORT I" },
  "Kcy"       => { :hex => 0x041A,	:entity => "&Kcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER KA" },
  "Lcy"       => { :hex => 0x041B,	:entity => "&Lcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER EL" },
  "Mcy"       => { :hex => 0x041C,	:entity => "&Mcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER EM" },
  "Ncy"       => { :hex => 0x041D,	:entity => "&Ncy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER EN" },
  "Ocy"       => { :hex => 0x041E,	:entity => "&Ocy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER O" },
  "Pcy"       => { :hex => 0x041F,	:entity => "&Pcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER PE" },
  "Rcy"       => { :hex => 0x0420,	:entity => "&Rcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER ER" },
  "Scy"       => { :hex => 0x0421,	:entity => "&Scy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER ES" },
  "Tcy"       => { :hex => 0x0422,	:entity => "&Tcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER TE" },
  "Ucy"       => { :hex => 0x0423,	:entity => "&Ucy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER U" },
  "Fcy"       => { :hex => 0x0424,	:entity => "&Fcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER EF" },
  "KHcy"      => { :hex => 0x0425,	:entity => "&KHcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER HA" },
  "TScy"      => { :hex => 0x0426,	:entity => "&TScy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER TSE" },
  "CHcy"      => { :hex => 0x0427,	:entity => "&CHcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER CHE" },
  "SHcy"      => { :hex => 0x0428,	:entity => "&SHcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER SHA" },
  "SHCHcy"    => { :hex => 0x0429,	:entity => "&SHCHcy;",    :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER SHCHA" },
  "HARDcy"    => { :hex => 0x042A,	:entity => "&HARDcy;",    :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER HARD SIGN" },
  "Ycy"       => { :hex => 0x042B,	:entity => "&Ycy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER YERU" },
  "SOFTcy"    => { :hex => 0x042C,	:entity => "&SOFTcy;",    :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER SOFT SIGN" },
  "Ecy"       => { :hex => 0x042D,	:entity => "&Ecy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER E" },
  "YUcy"      => { :hex => 0x042E,	:entity => "&YUcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER YU" },
  "YAcy"      => { :hex => 0x042F,	:entity => "&YAcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC CAPITAL LETTER YA" },
  "acy"       => { :hex => 0x0430,	:entity => "&acy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER A" },
  "bcy"       => { :hex => 0x0431,	:entity => "&bcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER BE" },
  "vcy"       => { :hex => 0x0432,	:entity => "&vcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER VE" },
  "gcy"       => { :hex => 0x0433,	:entity => "&gcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER GHE" },
  "dcy"       => { :hex => 0x0434,	:entity => "&dcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER DE" },
  "iecy"      => { :hex => 0x0435,	:entity => "&iecy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER IE" },
  "zhcy"      => { :hex => 0x0436,	:entity => "&zhcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER ZHE" },
  "zcy"       => { :hex => 0x0437,	:entity => "&zcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER ZE" },
  "icy"       => { :hex => 0x0438,	:entity => "&icy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER I" },
  "jcy"       => { :hex => 0x0439,	:entity => "&jcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER SHORT I" },
  "kcy"       => { :hex => 0x043A,	:entity => "&kcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER KA" },
  "lcy"       => { :hex => 0x043B,	:entity => "&lcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER EL" },
  "mcy"       => { :hex => 0x043C,	:entity => "&mcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER EM" },
  "ncy"       => { :hex => 0x043D,	:entity => "&ncy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER EN" },
  "ocy"       => { :hex => 0x043E,	:entity => "&ocy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER O" },
  "pcy"       => { :hex => 0x043F,	:entity => "&pcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER PE" },
  "rcy"       => { :hex => 0x0440,	:entity => "&rcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER ER" },
  "scy"       => { :hex => 0x0441,	:entity => "&scy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER ES" },
  "tcy"       => { :hex => 0x0442,	:entity => "&tcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER TE" },
  "ucy"       => { :hex => 0x0443,	:entity => "&ucy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER U" },
  "fcy"       => { :hex => 0x0444,	:entity => "&fcy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER EF" },
  "khcy"      => { :hex => 0x0445,	:entity => "&khcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER HA" },
  "tscy"      => { :hex => 0x0446,	:entity => "&tscy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER TSE" },
  "chcy"      => { :hex => 0x0447,	:entity => "&chcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER CHE" },
  "shcy"      => { :hex => 0x0448,	:entity => "&shcy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER SHA" },
  "shchcy"    => { :hex => 0x0449,	:entity => "&shchcy;",    :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER SHCHA" },
  "hardcy"    => { :hex => 0x044A,	:entity => "&hardcy;",    :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER HARD SIGN" },
  "ycy"       => { :hex => 0x044B,	:entity => "&ycy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER YERU" },
  "softcy"    => { :hex => 0x044C,	:entity => "&softcy;",    :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER SOFT SIGN" },
  "ecy"       => { :hex => 0x044D,	:entity => "&ecy;",       :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER E" },
  "yucy"      => { :hex => 0x044E,	:entity => "&yucy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER YU" },
  "yacy"      => { :hex => 0x044F,	:entity => "&yacy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER YA" },
  "iocy"      => { :hex => 0x0451,	:entity => "&iocy;",      :type => "ISOcyr1",     :udesc => "CYRILLIC SMALL LETTER IO" },
  "djcy"      => { :hex => 0x0452,	:entity => "&djcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER DJE" },
  "gjcy"      => { :hex => 0x0453,	:entity => "&gjcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER GJE" },
  "jukcy"     => { :hex => 0x0454,	:entity => "&jukcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER UKRAINIAN IE" },
  "dscy"      => { :hex => 0x0455,	:entity => "&dscy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER DZE" },
  "iukcy"     => { :hex => 0x0456,	:entity => "&iukcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I" },
  "yicy"      => { :hex => 0x0457,	:entity => "&yicy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER YI" },
  "jsercy"    => { :hex => 0x0458,	:entity => "&jsercy;",    :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER JE" },
  "ljcy"      => { :hex => 0x0459,	:entity => "&ljcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER LJE" },
  "njcy"      => { :hex => 0x045A,	:entity => "&njcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER NJE" },
  "tshcy"     => { :hex => 0x045B,	:entity => "&tshcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER TSHE" },
  "kjcy"      => { :hex => 0x045C,	:entity => "&kjcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER KJE" },
  "ubrcy"     => { :hex => 0x045E,	:entity => "&ubrcy;",     :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER SHORT U" },
  "dzcy"      => { :hex => 0x045F,	:entity => "&dzcy;",      :type => "ISOcyr2",     :udesc => "CYRILLIC SMALL LETTER DZHE" },
  "ensp"      => { :hex => 0x2002,	:entity => "&ensp;",      :type => "ISOpub",      :udesc => "EN SPACE" },
  "emsp"      => { :hex => 0x2003,	:entity => "&emsp;",      :type => "ISOpub",      :udesc => "EM SPACE" },
  "emsp13"    => { :hex => 0x2004,	:entity => "&emsp13;",    :type => "ISOpub",      :udesc => "THREE-PER-EM SPACE" },
  "emsp14"    => { :hex => 0x2005,	:entity => "&emsp14;",    :type => "ISOpub",      :udesc => "FOUR-PER-EM SPACE" },
  "numsp"     => { :hex => 0x2007,	:entity => "&numsp;",     :type => "ISOpub",      :udesc => "FIGURE SPACE" },
  "puncsp"    => { :hex => 0x2008,	:entity => "&puncsp;",    :type => "ISOpub",      :udesc => "PUNCTUATION SPACE" },
  "thinsp"    => { :hex => 0x2009,	:entity => "&thinsp;",    :type => "ISOpub",      :udesc => "THIN SPACE" },
  "hairsp"    => { :hex => 0x200A,	:entity => "&hairsp;",    :type => "ISOpub",      :udesc => "HAIR SPACE" },
  "zwnj"      => { :hex => 0x200C,	:entity => "&zwnj;",      :type => "HTMLspecial", :udesc => "ZERO WIDTH NON-JOINER" },
  "zwj"       => { :hex => 0x200D,	:entity => "&zwj;",       :type => "HTMLspecial", :udesc => "ZERO WIDTH JOINER" },
  "lrm"       => { :hex => 0x200E,	:entity => "&lrm;",       :type => "HTMLspecial", :udesc => "LEFT-TO-RIGHT MARK" },
  "rlm"       => { :hex => 0x200F,	:entity => "&rlm;",       :type => "HTMLspecial", :udesc => "RIGHT-TO-LEFT MARK" },
  "dash"      => { :hex => 0x2010,	:entity => "&dash;",      :type => "ISOpub",      :udesc => "HYPHEN" },
  "ndash"     => { :hex => 0x2013,	:entity => "&ndash;",     :type => "ISOpub",      :udesc => "EN DASH" },
  "mdash"     => { :hex => 0x2014,	:entity => "&mdash;",     :type => "ISOpub",      :udesc => "EM DASH" },
  "horbar"    => { :hex => 0x2015,	:entity => "&horbar;",    :type => "ISOnum",      :udesc => "HORIZONTAL BAR" },
  "Verbar"    => { :hex => 0x2016,	:entity => "&Verbar;",    :type => "ISOtech",     :udesc => "DOUBLE VERTICAL LINE" },
  "lsquo"     => { :hex => 0x2018,	:entity => "&lsquo;",     :type => "ISOnum",      :udesc => "LEFT SINGLE QUOTATION MARK" },
  "rsquor"    => { :hex => 0x2018,	:entity => "&rsquor;",    :type => "ISOpub",      :udesc => "LEFT SINGLE QUOTATION MARK" },
  "rsquo"     => { :hex => 0x2019,	:entity => "&rsquo;",     :type => "ISOnum",      :udesc => "RIGHT SINGLE QUOTATION MARK" },
  "lsquor"    => { :hex => 0x201A,	:entity => "&lsquor;",    :type => "ISOpub",      :udesc => "SINGLE LOW-9 QUOTATION MARK" },
  "sbquo"     => { :hex => 0x201A,	:entity => "&sbquo;",     :type => "HTMLspecial", :udesc => "SINGLE LOW-9 QUOTATION MARK" },
  "ldquo"     => { :hex => 0x201C,	:entity => "&ldquo;",     :type => "ISOnum",      :udesc => "LEFT DOUBLE QUOTATION MARK" },
  "rdquor"    => { :hex => 0x201C,	:entity => "&rdquor;",    :type => "ISOpub",      :udesc => "LEFT DOUBLE QUOTATION MARK" },
  "rdquo"     => { :hex => 0x201D,	:entity => "&rdquo;",     :type => "ISOnum",      :udesc => "RIGHT DOUBLE QUOTATION MARK" },
  "bdquo"     => { :hex => 0x201E,	:entity => "&bdquo;",     :type => "HTMLspecial", :udesc => "DOUBLE LOW-9 QUOTATION MARK" },
  "ldquor"    => { :hex => 0x201E,	:entity => "&ldquor;",    :type => "ISOpub",      :udesc => "DOUBLE LOW-9 QUOTATION MARK" },
  "dagger"    => { :hex => 0x2020,	:entity => "&dagger;",    :type => "ISOpub",      :udesc => "DAGGER" },
  "Dagger"    => { :hex => 0x2021,	:entity => "&Dagger;",    :type => "ISOpub",      :udesc => "DOUBLE DAGGER" },
  "bull"      => { :hex => 0x2022,	:entity => "&bull;",      :type => "ISOpub",      :udesc => "BULLET" },
  "nldr"      => { :hex => 0x2025,	:entity => "&nldr;",      :type => "ISOpub",      :udesc => "TWO DOT LEADER" },
  "hellip"    => { :hex => 0x2026,	:entity => "&hellip;",    :type => "ISOpub",      :udesc => "HORIZONTAL ELLIPSIS" },
  "mldr"      => { :hex => 0x2026,	:entity => "&mldr;",      :type => "ISOpub",      :udesc => "HORIZONTAL ELLIPSIS" },
  "permil"    => { :hex => 0x2030,	:entity => "&permil;",    :type => "ISOtech",     :udesc => "PER MILLE SIGN" },
  "prime"     => { :hex => 0x2032,	:entity => "&prime;",     :type => "ISOtech",     :udesc => "PRIME" },
  "vprime"    => { :hex => 0x2032,	:entity => "&vprime;",    :type => "ISOamso",     :udesc => "PRIME" },
  "Prime"     => { :hex => 0x2033,	:entity => "&Prime;",     :type => "ISOtech",     :udesc => "DOUBLE PRIME" },
  "tprime"    => { :hex => 0x2034,	:entity => "&tprime;",    :type => "ISOtech",     :udesc => "TRIPLE PRIME" },
  "bprime"    => { :hex => 0x2035,	:entity => "&bprime;",    :type => "ISOamso",     :udesc => "REVERSED PRIME" },
  "lsaquo"    => { :hex => 0x2039,	:entity => "&lsaquo;",    :type => "HTMLspecial", :udesc => "SINGLE LEFT-POINTING ANGLE QUOTATION MARK" },
  "rsaquo"    => { :hex => 0x203A,	:entity => "&rsaquo;",    :type => "HTMLspecial", :udesc => "SINGLE RIGHT-POINTING ANGLE QUOTATION MARK" },
  "oline"     => { :hex => 0x203E,	:entity => "&oline;",     :type => "HTMLsymbol",  :udesc => "OVERLINE" },
  "caret"     => { :hex => 0x2041,	:entity => "&caret;",     :type => "ISOpub",      :udesc => "CARET INSERTION POINT" },
  "hybull"    => { :hex => 0x2043,	:entity => "&hybull;",    :type => "ISOpub",      :udesc => "HYPHEN BULLET" },
  "frasl"     => { :hex => 0x2044,	:entity => "&frasl;",     :type => "HTMLsymbol",  :udesc => "FRACTION SLASH" },
  "euro"      => { :hex => 0x20AC,	:entity => "&euro;",      :type => "new",         :udesc => "EURO SIGN" },
  "tdot"      => { :hex => 0x20DB,	:entity => "&tdot;",      :type => "ISOtech",     :udesc => "COMBINING THREE DOTS ABOVE" },
  "DotDot"    => { :hex => 0x20DC,	:entity => "&DotDot;",    :type => "ISOtech",     :udesc => "COMBINING FOUR DOTS ABOVE" },
  "incare"    => { :hex => 0x2105,	:entity => "&incare;",    :type => "ISOpub",      :udesc => "CARE OF" },
  "hamilt"    => { :hex => 0x210B,	:entity => "&hamilt;",    :type => "ISOtech",     :udesc => "SCRIPT CAPITAL H" },
  "planck"    => { :hex => 0x210F,	:entity => "&planck;",    :type => "ISOamso",     :udesc => "PLANCK CONSTANT OVER TWO PI" },
  "image"     => { :hex => 0x2111,	:entity => "&image;",     :type => "ISOamso",     :udesc => "BLACK-LETTER CAPITAL I" },
  "lagran"    => { :hex => 0x2112,	:entity => "&lagran;",    :type => "ISOtech",     :udesc => "SCRIPT CAPITAL L" },
  "ell"       => { :hex => 0x2113,	:entity => "&ell;",       :type => "ISOamso",     :udesc => "SCRIPT SMALL L" },
  "numero"    => { :hex => 0x2116,	:entity => "&numero;",    :type => "ISOcyr1",     :udesc => "NUMERO SIGN" },
  "copysr"    => { :hex => 0x2117,	:entity => "&copysr;",    :type => "ISOpub",      :udesc => "SOUND RECORDING COPYRIGHT" },
  "weierp"    => { :hex => 0x2118,	:entity => "&weierp;",    :type => "ISOamso",     :udesc => "SCRIPT CAPITAL P" },
  "real"      => { :hex => 0x211C,	:entity => "&real;",      :type => "ISOamso",     :udesc => "BLACK-LETTER CAPITAL R" },
  "rx"        => { :hex => 0x211E,	:entity => "&rx;",        :type => "ISOpub",      :udesc => "PRESCRIPTION TAKE" },
  "trade"     => { :hex => 0x2122,	:entity => "&trade;",     :type => "ISOnum",      :udesc => "TRADE MARK SIGN" },
  "ohm"       => { :hex => 0x2126,	:entity => "&ohm;",       :type => "ISOnum",      :udesc => "OHM SIGN" },
  "angst"     => { :hex => 0x212B,	:entity => "&angst;",     :type => "ISOtech",     :udesc => "ANGSTROM SIGN" },
  "bernou"    => { :hex => 0x212C,	:entity => "&bernou;",    :type => "ISOtech",     :udesc => "SCRIPT CAPITAL B" },
  "phmmat"    => { :hex => 0x2133,	:entity => "&phmmat;",    :type => "ISOtech",     :udesc => "SCRIPT CAPITAL M" },
  "order"     => { :hex => 0x2134,	:entity => "&order;",     :type => "ISOtech",     :udesc => "SCRIPT SMALL O" },
  "alefsym"   => { :hex => 0x2135,	:entity => "&alefsym;",   :type => "HTMLsymbol",  :udesc => "ALEF SYMBOL" },
  "aleph"     => { :hex => 0x2135,	:entity => "&aleph;",     :type => "ISOtech",     :udesc => "ALEF SYMBOL" },
  "beth"      => { :hex => 0x2136,	:entity => "&beth;",      :type => "ISOamso",     :udesc => "BET SYMBOL" },
  "gimel"     => { :hex => 0x2137,	:entity => "&gimel;",     :type => "ISOamso",     :udesc => "GIMEL SYMBOL" },
  "daleth"    => { :hex => 0x2138,	:entity => "&daleth;",    :type => "ISOamso",     :udesc => "DALET SYMBOL" },
  "frac13"    => { :hex => 0x2153,	:entity => "&frac13;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION ONE THIRD" },
  "frac23"    => { :hex => 0x2154,	:entity => "&frac23;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION TWO THIRDS" },
  "frac15"    => { :hex => 0x2155,	:entity => "&frac15;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION ONE FIFTH" },
  "frac25"    => { :hex => 0x2156,	:entity => "&frac25;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION TWO FIFTHS" },
  "frac35"    => { :hex => 0x2157,	:entity => "&frac35;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION THREE FIFTHS" },
  "frac45"    => { :hex => 0x2158,	:entity => "&frac45;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION FOUR FIFTHS" },
  "frac16"    => { :hex => 0x2159,	:entity => "&frac16;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION ONE SIXTH" },
  "frac56"    => { :hex => 0x215A,	:entity => "&frac56;",    :type => "ISOpub",      :udesc => "VULGAR FRACTION FIVE SIXTHS" },
  "frac18"    => { :hex => 0x215B,	:entity => "&frac18;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION ONE EIGHTH" },
  "frac38"    => { :hex => 0x215C,	:entity => "&frac38;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION THREE EIGHTHS" },
  "frac58"    => { :hex => 0x215D,	:entity => "&frac58;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION FIVE EIGHTHS" },
  "frac78"    => { :hex => 0x215E,	:entity => "&frac78;",    :type => "ISOnum",      :udesc => "VULGAR FRACTION SEVEN EIGHTHS" },
  "larr"      => { :hex => 0x2190,	:entity => "&larr;",      :type => "ISOnum",      :udesc => "LEFTWARDS ARROW" },
  "uarr"      => { :hex => 0x2191,	:entity => "&uarr;",      :type => "ISOnum",      :udesc => "UPWARDS ARROW" },
  "rarr"      => { :hex => 0x2192,	:entity => "&rarr;",      :type => "ISOnum",      :udesc => "RIGHTWARDS ARROW" },
  "darr"      => { :hex => 0x2193,	:entity => "&darr;",      :type => "ISOnum",      :udesc => "DOWNWARDS ARROW" },
  "harr"      => { :hex => 0x2194,	:entity => "&harr;",      :type => "ISOamsa",     :udesc => "LEFT RIGHT ARROW" },
  "xhArr"     => { :hex => 0x2194,	:entity => "&xhArr;",     :type => "ISOamsa",     :udesc => "LEFT RIGHT ARROW" },
  "xharr"     => { :hex => 0x2194,	:entity => "&xharr;",     :type => "ISOamsa",     :udesc => "LEFT RIGHT ARROW" },
  "varr"      => { :hex => 0x2195,	:entity => "&varr;",      :type => "ISOamsa",     :udesc => "UP DOWN ARROW" },
  "nwarr"     => { :hex => 0x2196,	:entity => "&nwarr;",     :type => "ISOamsa",     :udesc => "NORTH WEST ARROW" },
  "nearr"     => { :hex => 0x2197,	:entity => "&nearr;",     :type => "ISOamsa",     :udesc => "NORTH EAST ARROW" },
  "drarr"     => { :hex => 0x2198,	:entity => "&drarr;",     :type => "ISOamsa",     :udesc => "SOUTH EAST ARROW" },
  "dlarr"     => { :hex => 0x2199,	:entity => "&dlarr;",     :type => "ISOamsa",     :udesc => "SOUTH WEST ARROW" },
  "nlarr"     => { :hex => 0x219A,	:entity => "&nlarr;",     :type => "ISOamsa",     :udesc => "LEFTWARDS ARROW WITH STROKE" },
  "nrarr"     => { :hex => 0x219B,	:entity => "&nrarr;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS ARROW WITH STROKE" },
  "rarrw"     => { :hex => 0x219D,	:entity => "&rarrw;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS WAVE ARROW" },
  "Larr"      => { :hex => 0x219E,	:entity => "&Larr;",      :type => "ISOamsa",     :udesc => "LEFTWARDS TWO HEADED ARROW" },
  "Rarr"      => { :hex => 0x21A0,	:entity => "&Rarr;",      :type => "ISOamsa",     :udesc => "RIGHTWARDS TWO HEADED ARROW" },
  "larrtl"    => { :hex => 0x21A2,	:entity => "&larrtl;",    :type => "ISOamsa",     :udesc => "LEFTWARDS ARROW WITH TAIL" },
  "rarrtl"    => { :hex => 0x21A3,	:entity => "&rarrtl;",    :type => "ISOamsa",     :udesc => "RIGHTWARDS ARROW WITH TAIL" },
  "map"       => { :hex => 0x21A6,	:entity => "&map;",       :type => "ISOamsa",     :udesc => "RIGHTWARDS ARROW FROM BAR" },
  "larrhk"    => { :hex => 0x21A9,	:entity => "&larrhk;",    :type => "ISOamsa",     :udesc => "LEFTWARDS ARROW WITH HOOK" },
  "rarrhk"    => { :hex => 0x21AA,	:entity => "&rarrhk;",    :type => "ISOamsa",     :udesc => "RIGHTWARDS ARROW WITH HOOK" },
  "larrlp"    => { :hex => 0x21AB,	:entity => "&larrlp;",    :type => "ISOamsa",     :udesc => "LEFTWARDS ARROW WITH LOOP" },
  "rarrlp"    => { :hex => 0x21AC,	:entity => "&rarrlp;",    :type => "ISOamsa",     :udesc => "RIGHTWARDS ARROW WITH LOOP" },
  "harrw"     => { :hex => 0x21AD,	:entity => "&harrw;",     :type => "ISOamsa",     :udesc => "LEFT RIGHT WAVE ARROW" },
  "nharr"     => { :hex => 0x21AE,	:entity => "&nharr;",     :type => "ISOamsa",     :udesc => "LEFT RIGHT ARROW WITH STROKE" },
  "lsh"       => { :hex => 0x21B0,	:entity => "&lsh;",       :type => "ISOamsa",     :udesc => "UPWARDS ARROW WITH TIP LEFTWARDS" },
  "rsh"       => { :hex => 0x21B1,	:entity => "&rsh;",       :type => "ISOamsa",     :udesc => "UPWARDS ARROW WITH TIP RIGHTWARDS" },
  "crarr"     => { :hex => 0x21B5,	:entity => "&crarr;",     :type => "HTMLsymbol",  :udesc => "DOWNWARDS ARROW WITH CORNER LEFTWARDS" },
  "cularr"    => { :hex => 0x21B6,	:entity => "&cularr;",    :type => "ISOamsa",     :udesc => "ANTICLOCKWISE TOP SEMICIRCLE ARROW" },
  "curarr"    => { :hex => 0x21B7,	:entity => "&curarr;",    :type => "ISOamsa",     :udesc => "CLOCKWISE TOP SEMICIRCLE ARROW" },
  "olarr"     => { :hex => 0x21BA,	:entity => "&olarr;",     :type => "ISOamsa",     :udesc => "ANTICLOCKWISE OPEN CIRCLE ARROW" },
  "orarr"     => { :hex => 0x21BB,	:entity => "&orarr;",     :type => "ISOamsa",     :udesc => "CLOCKWISE OPEN CIRCLE ARROW" },
  "lharu"     => { :hex => 0x21BC,	:entity => "&lharu;",     :type => "ISOamsa",     :udesc => "LEFTWARDS HARPOON WITH BARB UPWARDS" },
  "lhard"     => { :hex => 0x21BD,	:entity => "&lhard;",     :type => "ISOamsa",     :udesc => "LEFTWARDS HARPOON WITH BARB DOWNWARDS" },
  "uharr"     => { :hex => 0x21BE,	:entity => "&uharr;",     :type => "ISOamsa",     :udesc => "UPWARDS HARPOON WITH BARB RIGHTWARDS" },
  "uharl"     => { :hex => 0x21BF,	:entity => "&uharl;",     :type => "ISOamsa",     :udesc => "UPWARDS HARPOON WITH BARB LEFTWARDS" },
  "rharu"     => { :hex => 0x21C0,	:entity => "&rharu;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS HARPOON WITH BARB UPWARDS" },
  "rhard"     => { :hex => 0x21C1,	:entity => "&rhard;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS HARPOON WITH BARB DOWNWARDS" },
  "dharr"     => { :hex => 0x21C2,	:entity => "&dharr;",     :type => "ISOamsa",     :udesc => "DOWNWARDS HARPOON WITH BARB RIGHTWARDS" },
  "dharl"     => { :hex => 0x21C3,	:entity => "&dharl;",     :type => "ISOamsa",     :udesc => "DOWNWARDS HARPOON WITH BARB LEFTWARDS" },
  "rlarr2"    => { :hex => 0x21C4,	:entity => "&rlarr2;",    :type => "ISOamsa",     :udesc => "RIGHTWARDS ARROW OVER LEFTWARDS ARROW" },
  "lrarr2"    => { :hex => 0x21C6,	:entity => "&lrarr2;",    :type => "ISOamsa",     :udesc => "LEFTWARDS ARROW OVER RIGHTWARDS ARROW" },
  "larr2"     => { :hex => 0x21C7,	:entity => "&larr2;",     :type => "ISOamsa",     :udesc => "LEFTWARDS PAIRED ARROWS" },
  "uarr2"     => { :hex => 0x21C8,	:entity => "&uarr2;",     :type => "ISOamsa",     :udesc => "UPWARDS PAIRED ARROWS" },
  "rarr2"     => { :hex => 0x21C9,	:entity => "&rarr2;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS PAIRED ARROWS" },
  "darr2"     => { :hex => 0x21CA,	:entity => "&darr2;",     :type => "ISOamsa",     :udesc => "DOWNWARDS PAIRED ARROWS" },
  "lrhar2"    => { :hex => 0x21CB,	:entity => "&lrhar2;",    :type => "ISOamsa",     :udesc => "LEFTWARDS HARPOON OVER RIGHTWARDS HARPOON" },
  "rlhar2"    => { :hex => 0x21CC,	:entity => "&rlhar2;",    :type => "ISOamsa",     :udesc => "RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON" },
  "nlArr"     => { :hex => 0x21CD,	:entity => "&nlArr;",     :type => "ISOamsa",     :udesc => "LEFTWARDS DOUBLE ARROW WITH STROKE" },
  "nhArr"     => { :hex => 0x21CE,	:entity => "&nhArr;",     :type => "ISOamsa",     :udesc => "LEFT RIGHT DOUBLE ARROW WITH STROKE" },
  "nrArr"     => { :hex => 0x21CF,	:entity => "&nrArr;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS DOUBLE ARROW WITH STROKE" },
  "lArr"      => { :hex => 0x21D0,	:entity => "&lArr;",      :type => "ISOtech",     :udesc => "LEFTWARDS DOUBLE ARROW" },
  "xlArr"     => { :hex => 0x21D0,	:entity => "&xlArr;",     :type => "ISOamsa",     :udesc => "LEFTWARDS DOUBLE ARROW" },
  "uArr"      => { :hex => 0x21D1,	:entity => "&uArr;",      :type => "ISOamsa",     :udesc => "UPWARDS DOUBLE ARROW" },
  "rArr"      => { :hex => 0x21D2,	:entity => "&rArr;",      :type => "ISOtech",     :udesc => "RIGHTWARDS DOUBLE ARROW" },
  "xrArr"     => { :hex => 0x21D2,	:entity => "&xrArr;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS DOUBLE ARROW" },
  "dArr"      => { :hex => 0x21D3,	:entity => "&dArr;",      :type => "ISOamsa",     :udesc => "DOWNWARDS DOUBLE ARROW" },
  "hArr"      => { :hex => 0x21D4,	:entity => "&hArr;",      :type => "ISOamsa",     :udesc => "LEFT RIGHT DOUBLE ARROW" },
  "iff"       => { :hex => 0x21D4,	:entity => "&iff;",       :type => "ISOtech",     :udesc => "LEFT RIGHT DOUBLE ARROW" },
  "vArr"      => { :hex => 0x21D5,	:entity => "&vArr;",      :type => "ISOamsa",     :udesc => "UP DOWN DOUBLE ARROW" },
  "lAarr"     => { :hex => 0x21DA,	:entity => "&lAarr;",     :type => "ISOamsa",     :udesc => "LEFTWARDS TRIPLE ARROW" },
  "rAarr"     => { :hex => 0x21DB,	:entity => "&rAarr;",     :type => "ISOamsa",     :udesc => "RIGHTWARDS TRIPLE ARROW" },
  "forall"    => { :hex => 0x2200,	:entity => "&forall;",    :type => "ISOtech",     :udesc => "FOR ALL" },
  "comp"      => { :hex => 0x2201,	:entity => "&comp;",      :type => "ISOamso",     :udesc => "COMPLEMENT" },
  "part"      => { :hex => 0x2202,	:entity => "&part;",      :type => "ISOtech",     :udesc => "PARTIAL DIFFERENTIAL" },
  "exist"     => { :hex => 0x2203,	:entity => "&exist;",     :type => "ISOtech",     :udesc => "THERE EXISTS" },
  "nexist"    => { :hex => 0x2204,	:entity => "&nexist;",    :type => "ISOamso",     :udesc => "THERE DOES NOT EXIST" },
  "empty"     => { :hex => 0x2205,	:entity => "&empty;",     :type => "ISOamso",     :udesc => "EMPTY SET" },
  "nabla"     => { :hex => 0x2207,	:entity => "&nabla;",     :type => "ISOtech",     :udesc => "NABLA" },
  "isin"      => { :hex => 0x2208,	:entity => "&isin;",      :type => "ISOtech",     :udesc => "ELEMENT OF" },
  "notin"     => { :hex => 0x2209,	:entity => "&notin;",     :type => "ISOtech",     :udesc => "NOT AN ELEMENT OF" },
  "epsis"     => { :hex => 0x220A,	:entity => "&epsis;",     :type => "ISOgrk3",     :udesc => "SMALL ELEMENT OF" },
  "ni"        => { :hex => 0x220B,	:entity => "&ni;",        :type => "ISOtech",     :udesc => "CONTAINS AS MEMBER" },
  "bepsi"     => { :hex => 0x220D,	:entity => "&bepsi;",     :type => "ISOamsr",     :udesc => "SMALL CONTAINS AS MEMBER" },
  "prod"      => { :hex => 0x220F,	:entity => "&prod;",      :type => "ISOamsb",     :udesc => "N-ARY PRODUCT" },
  "amalg"     => { :hex => 0x2210,	:entity => "&amalg;",     :type => "ISOamsb",     :udesc => "N-ARY COPRODUCT" },
  "coprod"    => { :hex => 0x2210,	:entity => "&coprod;",    :type => "ISOamsb",     :udesc => "N-ARY COPRODUCT" },
  "samalg"    => { :hex => 0x2210,	:entity => "&samalg;",    :type => "ISOamsr",     :udesc => "N-ARY COPRODUCT" },
  "sum"       => { :hex => 0x2211,	:entity => "&sum;",       :type => "ISOamsb",     :udesc => "N-ARY SUMMATION" },
  "minus"     => { :hex => 0x2212,	:entity => "&minus;",     :type => "ISOtech",     :udesc => "MINUS SIGN" },
  "mnplus"    => { :hex => 0x2213,	:entity => "&mnplus;",    :type => "ISOtech",     :udesc => "MINUS-OR-PLUS SIGN" },
  "plusdo"    => { :hex => 0x2214,	:entity => "&plusdo;",    :type => "ISOamsb",     :udesc => "DOT PLUS" },
  "setmn"     => { :hex => 0x2216,	:entity => "&setmn;",     :type => "ISOamsb",     :udesc => "SET MINUS" },
  "ssetmn"    => { :hex => 0x2216,	:entity => "&ssetmn;",    :type => "ISOamsb",     :udesc => "SET MINUS" },
  "lowast"    => { :hex => 0x2217,	:entity => "&lowast;",    :type => "ISOtech",     :udesc => "ASTERISK OPERATOR" },
  "compfn"    => { :hex => 0x2218,	:entity => "&compfn;",    :type => "ISOtech",     :udesc => "RING OPERATOR" },
  "radic"     => { :hex => 0x221A,	:entity => "&radic;",     :type => "ISOtech",     :udesc => "SQUARE ROOT" },
  "prop"      => { :hex => 0x221D,	:entity => "&prop;",      :type => "ISOtech",     :udesc => "PROPORTIONAL TO" },
  "vprop"     => { :hex => 0x221D,	:entity => "&vprop;",     :type => "ISOamsr",     :udesc => "PROPORTIONAL TO" },
  "infin"     => { :hex => 0x221E,	:entity => "&infin;",     :type => "ISOtech",     :udesc => "INFINITY" },
  "ang90"     => { :hex => 0x221F,	:entity => "&ang90;",     :type => "ISOtech",     :udesc => "RIGHT ANGLE" },
  "ang"       => { :hex => 0x2220,	:entity => "&ang;",       :type => "ISOamso",     :udesc => "ANGLE" },
  "angmsd"    => { :hex => 0x2221,	:entity => "&angmsd;",    :type => "ISOamso",     :udesc => "MEASURED ANGLE" },
  "angsph"    => { :hex => 0x2222,	:entity => "&angsph;",    :type => "ISOtech",     :udesc => "SPHERICAL ANGLE" },
  "mid"       => { :hex => 0x2223,	:entity => "&mid;",       :type => "ISOamsr",     :udesc => "DIVIDES" },
  "nmid"      => { :hex => 0x2224,	:entity => "&nmid;",      :type => "ISOamsn",     :udesc => "DOES NOT DIVIDE" },
  "par"       => { :hex => 0x2225,	:entity => "&par;",       :type => "ISOtech",     :udesc => "PARALLEL TO" },
  "spar"      => { :hex => 0x2225,	:entity => "&spar;",      :type => "ISOamsr",     :udesc => "PARALLEL TO" },
  "npar"      => { :hex => 0x2226,	:entity => "&npar;",      :type => "ISOamsn",     :udesc => "NOT PARALLEL TO" },
  "nspar"     => { :hex => 0x2226,	:entity => "&nspar;",     :type => "ISOamsn",     :udesc => "NOT PARALLEL TO" },
  "and"       => { :hex => 0x2227,	:entity => "&and;",       :type => "ISOtech",     :udesc => "LOGICAL AND" },
  "or"        => { :hex => 0x2228,	:entity => "&or;",        :type => "ISOtech",     :udesc => "LOGICAL OR" },
  "cap"       => { :hex => 0x2229,	:entity => "&cap;",       :type => "ISOtech",     :udesc => "INTERSECTION" },
  "cup"       => { :hex => 0x222A,	:entity => "&cup;",       :type => "ISOtech",     :udesc => "UNION" },
  "int"       => { :hex => 0x222B,	:entity => "&int;",       :type => "ISOtech",     :udesc => "INTEGRAL" },
  "conint"    => { :hex => 0x222E,	:entity => "&conint;",    :type => "ISOtech",     :udesc => "CONTOUR INTEGRAL" },
  "there4"    => { :hex => 0x2234,	:entity => "&there4;",    :type => "ISOtech",     :udesc => "THEREFORE" },
  "becaus"    => { :hex => 0x2235,	:entity => "&becaus;",    :type => "ISOtech",     :udesc => "BECAUSE" },
  "sim"       => { :hex => 0x223C,	:entity => "&sim;",       :type => "ISOtech",     :udesc => "TILDE OPERATOR" },
  "thksim"    => { :hex => 0x223C,	:entity => "&thksim;",    :type => "ISOamsr",     :udesc => "TILDE OPERATOR" },
  "bsim"      => { :hex => 0x223D,	:entity => "&bsim;",      :type => "ISOamsr",     :udesc => "REVERSED TILDE" },
  "wreath"    => { :hex => 0x2240,	:entity => "&wreath;",    :type => "ISOamsb",     :udesc => "WREATH PRODUCT" },
  "nsim"      => { :hex => 0x2241,	:entity => "&nsim;",      :type => "ISOamsn",     :udesc => "NOT TILDE" },
  "sime"      => { :hex => 0x2243,	:entity => "&sime;",      :type => "ISOtech",     :udesc => "ASYMPTOTICALLY EQUAL TO" },
  "nsime"     => { :hex => 0x2244,	:entity => "&nsime;",     :type => "ISOamsn",     :udesc => "NOT ASYMPTOTICALLY EQUAL TO" },
  "cong"      => { :hex => 0x2245,	:entity => "&cong;",      :type => "ISOtech",     :udesc => "APPROXIMATELY EQUAL TO" },
  "ncong"     => { :hex => 0x2247,	:entity => "&ncong;",     :type => "ISOamsn",     :udesc => "NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO" },
  "ap"        => { :hex => 0x2248,	:entity => "&ap;",        :type => "ISOtech",     :udesc => "ALMOST EQUAL TO" },
  "asymp"     => { :hex => 0x2248,	:entity => "&asymp;",     :type => "ISOamsr",     :udesc => "ALMOST EQUAL TO" },
  "thkap"     => { :hex => 0x2248,	:entity => "&thkap;",     :type => "ISOamsr",     :udesc => "ALMOST EQUAL TO" },
  "nap"       => { :hex => 0x2249,	:entity => "&nap;",       :type => "ISOamsn",     :udesc => "NOT ALMOST EQUAL TO" },
  "ape"       => { :hex => 0x224A,	:entity => "&ape;",       :type => "ISOamsr",     :udesc => "ALMOST EQUAL OR EQUAL TO" },
  "bcong"     => { :hex => 0x224C,	:entity => "&bcong;",     :type => "ISOamsr",     :udesc => "ALL EQUAL TO" },
  "bump"      => { :hex => 0x224E,	:entity => "&bump;",      :type => "ISOamsr",     :udesc => "GEOMETRICALLY EQUIVALENT TO" },
  "bumpe"     => { :hex => 0x224F,	:entity => "&bumpe;",     :type => "ISOamsr",     :udesc => "DIFFERENCE BETWEEN" },
  "esdot"     => { :hex => 0x2250,	:entity => "&esdot;",     :type => "ISOamsr",     :udesc => "APPROACHES THE LIMIT" },
  "eDot"      => { :hex => 0x2251,	:entity => "&eDot;",      :type => "ISOamsr",     :udesc => "GEOMETRICALLY EQUAL TO" },
  "efDot"     => { :hex => 0x2252,	:entity => "&efDot;",     :type => "ISOamsr",     :udesc => "APPROXIMATELY EQUAL TO OR THE IMAGE OF" },
  "erDot"     => { :hex => 0x2253,	:entity => "&erDot;",     :type => "ISOamsr",     :udesc => "IMAGE OF OR APPROXIMATELY EQUAL TO" },
  "colone"    => { :hex => 0x2254,	:entity => "&colone;",    :type => "ISOamsr",     :udesc => "COLON EQUALS" },
  "ecolon"    => { :hex => 0x2255,	:entity => "&ecolon;",    :type => "ISOamsr",     :udesc => "EQUALS COLON" },
  "ecir"      => { :hex => 0x2256,	:entity => "&ecir;",      :type => "ISOamsr",     :udesc => "RING IN EQUAL TO" },
  "cire"      => { :hex => 0x2257,	:entity => "&cire;",      :type => "ISOamsr",     :udesc => "RING EQUAL TO" },
  "wedgeq"    => { :hex => 0x2259,	:entity => "&wedgeq;",    :type => "ISOtech",     :udesc => "ESTIMATES" },
  "trie"      => { :hex => 0x225C,	:entity => "&trie;",      :type => "ISOamsr",     :udesc => "DELTA EQUAL TO" },
  "ne"        => { :hex => 0x2260,	:entity => "&ne;",        :type => "ISOtech",     :udesc => "NOT EQUAL TO" },
  "equiv"     => { :hex => 0x2261,	:entity => "&equiv;",     :type => "ISOtech",     :udesc => "IDENTICAL TO" },
  "nequiv"    => { :hex => 0x2262,	:entity => "&nequiv;",    :type => "ISOamsn",     :udesc => "NOT IDENTICAL TO" },
  "le"        => { :hex => 0x2264,	:entity => "&le;",        :type => "ISOtech",     :udesc => "LESS-THAN OR EQUAL TO" },
  "les"       => { :hex => 0x2264,	:entity => "&les;",       :type => "ISOamsr",     :udesc => "LESS-THAN OR EQUAL TO" },
  "ge"        => { :hex => 0x2265,	:entity => "&ge;",        :type => "ISOtech",     :udesc => "GREATER-THAN OR EQUAL TO" },
  "ges"       => { :hex => 0x2265,	:entity => "&ges;",       :type => "ISOamsr",     :udesc => "GREATER-THAN OR EQUAL TO" },
  "lE"        => { :hex => 0x2266,	:entity => "&lE;",        :type => "ISOamsr",     :udesc => "LESS-THAN OVER EQUAL TO" },
  "gE"        => { :hex => 0x2267,	:entity => "&gE;",        :type => "ISOamsr",     :udesc => "GREATER-THAN OVER EQUAL TO" },
  "lnE"       => { :hex => 0x2268,	:entity => "&lnE;",       :type => "ISOamsn",     :udesc => "LESS-THAN BUT NOT EQUAL TO" },
  "lne"       => { :hex => 0x2268,	:entity => "&lne;",       :type => "ISOamsn",     :udesc => "LESS-THAN BUT NOT EQUAL TO" },
  "lvnE"      => { :hex => 0x2268,	:entity => "&lvnE;",      :type => "ISOamsn",     :udesc => "LESS-THAN BUT NOT EQUAL TO" },
  "gnE"       => { :hex => 0x2269,	:entity => "&gnE;",       :type => "ISOamsn",     :udesc => "GREATER-THAN BUT NOT EQUAL TO" },
  "gne"       => { :hex => 0x2269,	:entity => "&gne;",       :type => "ISOamsn",     :udesc => "GREATER-THAN BUT NOT EQUAL TO" },
  "gvnE"      => { :hex => 0x2269,	:entity => "&gvnE;",      :type => "ISOamsn",     :udesc => "GREATER-THAN BUT NOT EQUAL TO" },
  "Lt"        => { :hex => 0x226A,	:entity => "&Lt;",        :type => "ISOamsr",     :udesc => "MUCH LESS-THAN" },
  "Gt"        => { :hex => 0x226B,	:entity => "&Gt;",        :type => "ISOamsr",     :udesc => "MUCH GREATER-THAN" },
  "twixt"     => { :hex => 0x226C,	:entity => "&twixt;",     :type => "ISOamsr",     :udesc => "BETWEEN" },
  "nlt"       => { :hex => 0x226E,	:entity => "&nlt;",       :type => "ISOamsn",     :udesc => "NOT LESS-THAN" },
  "ngt"       => { :hex => 0x226F,	:entity => "&ngt;",       :type => "ISOamsn",     :udesc => "NOT GREATER-THAN" },
  "nle"       => { :hex => 0x2270,	:entity => "&nle;",       :type => "ISOamsn",     :udesc => "NEITHER LESS-THAN NOR EQUAL TO" },
  "nles"      => { :hex => 0x2270,	:entity => "&nles;",      :type => "ISOamsn",     :udesc => "NEITHER LESS-THAN NOR EQUAL TO" },
  "nge"       => { :hex => 0x2271,	:entity => "&nge;",       :type => "ISOamsn",     :udesc => "NEITHER GREATER-THAN NOR EQUAL TO" },
  "nges"      => { :hex => 0x2271,	:entity => "&nges;",      :type => "ISOamsn",     :udesc => "NEITHER GREATER-THAN NOR EQUAL TO" },
  "lsim"      => { :hex => 0x2272,	:entity => "&lsim;",      :type => "ISOamsr",     :udesc => "LESS-THAN OR EQUIVALENT TO" },
  "gsim"      => { :hex => 0x2273,	:entity => "&gsim;",      :type => "ISOamsr",     :udesc => "GREATER-THAN OR EQUIVALENT TO" },
  "lg"        => { :hex => 0x2276,	:entity => "&lg;",        :type => "ISOamsr",     :udesc => "LESS-THAN OR GREATER-THAN" },
  "gl"        => { :hex => 0x2277,	:entity => "&gl;",        :type => "ISOamsr",     :udesc => "GREATER-THAN OR LESS-THAN" },
  "pr"        => { :hex => 0x227A,	:entity => "&pr;",        :type => "ISOamsr",     :udesc => "PRECEDES" },
  "sc"        => { :hex => 0x227B,	:entity => "&sc;",        :type => "ISOamsr",     :udesc => "SUCCEEDS" },
  "cupre"     => { :hex => 0x227C,	:entity => "&cupre;",     :type => "ISOamsr",     :udesc => "PRECEDES OR EQUAL TO" },
  "pre"       => { :hex => 0x227C,	:entity => "&pre;",       :type => "ISOamsr",     :udesc => "PRECEDES OR EQUAL TO" },
  "sccue"     => { :hex => 0x227D,	:entity => "&sccue;",     :type => "ISOamsr",     :udesc => "SUCCEEDS OR EQUAL TO" },
  "sce"       => { :hex => 0x227D,	:entity => "&sce;",       :type => "ISOamsr",     :udesc => "SUCCEEDS OR EQUAL TO" },
  "prsim"     => { :hex => 0x227E,	:entity => "&prsim;",     :type => "ISOamsr",     :udesc => "PRECEDES OR EQUIVALENT TO" },
  "scsim"     => { :hex => 0x227F,	:entity => "&scsim;",     :type => "ISOamsr",     :udesc => "SUCCEEDS OR EQUIVALENT TO" },
  "npr"       => { :hex => 0x2280,	:entity => "&npr;",       :type => "ISOamsn",     :udesc => "DOES NOT PRECEDE" },
  "nsc"       => { :hex => 0x2281,	:entity => "&nsc;",       :type => "ISOamsn",     :udesc => "DOES NOT SUCCEED" },
  "sub"       => { :hex => 0x2282,	:entity => "&sub;",       :type => "ISOtech",     :udesc => "SUBSET OF" },
  "sup"       => { :hex => 0x2283,	:entity => "&sup;",       :type => "ISOtech",     :udesc => "SUPERSET OF" },
  "nsub"      => { :hex => 0x2284,	:entity => "&nsub;",      :type => "ISOamsn",     :udesc => "NOT A SUBSET OF" },
  "nsup"      => { :hex => 0x2285,	:entity => "&nsup;",      :type => "ISOamsn",     :udesc => "NOT A SUPERSET OF" },
  "subE"      => { :hex => 0x2286,	:entity => "&subE;",      :type => "ISOamsr",     :udesc => "SUBSET OF OR EQUAL TO" },
  "sube"      => { :hex => 0x2286,	:entity => "&sube;",      :type => "ISOtech",     :udesc => "SUBSET OF OR EQUAL TO" },
  "supE"      => { :hex => 0x2287,	:entity => "&supE;",      :type => "ISOamsr",     :udesc => "SUPERSET OF OR EQUAL TO" },
  "supe"      => { :hex => 0x2287,	:entity => "&supe;",      :type => "ISOtech",     :udesc => "SUPERSET OF OR EQUAL TO" },
  "nsubE"     => { :hex => 0x2288,	:entity => "&nsubE;",     :type => "ISOamsn",     :udesc => "NEITHER A SUBSET OF NOR EQUAL TO" },
  "nsube"     => { :hex => 0x2288,	:entity => "&nsube;",     :type => "ISOamsn",     :udesc => "NEITHER A SUBSET OF NOR EQUAL TO" },
  "nsupE"     => { :hex => 0x2289,	:entity => "&nsupE;",     :type => "ISOamsn",     :udesc => "NEITHER A SUPERSET OF NOR EQUAL TO" },
  "nsupe"     => { :hex => 0x2289,	:entity => "&nsupe;",     :type => "ISOamsn",     :udesc => "NEITHER A SUPERSET OF NOR EQUAL TO" },
  "subnE"     => { :hex => 0x228A,	:entity => "&subnE;",     :type => "ISOamsn",     :udesc => "SUBSET OF WITH NOT EQUAL TO" },
  "subne"     => { :hex => 0x228A,	:entity => "&subne;",     :type => "ISOamsn",     :udesc => "SUBSET OF WITH NOT EQUAL TO" },
  "vsubnE"    => { :hex => 0x228A,	:entity => "&vsubnE;",    :type => "ISOamsn",     :udesc => "SUBSET OF WITH NOT EQUAL TO" },
  "vsubne"    => { :hex => 0x228A,	:entity => "&vsubne;",    :type => "ISOamsn",     :udesc => "SUBSET OF WITH NOT EQUAL TO" },
  "supnE"     => { :hex => 0x228B,	:entity => "&supnE;",     :type => "ISOamsn",     :udesc => "SUPERSET OF WITH NOT EQUAL TO" },
  "supne"     => { :hex => 0x228B,	:entity => "&supne;",     :type => "ISOamsn",     :udesc => "SUPERSET OF WITH NOT EQUAL TO" },
  "vsupnE"    => { :hex => 0x228B,	:entity => "&vsupnE;",    :type => "ISOamsn",     :udesc => "SUPERSET OF WITH NOT EQUAL TO" },
  "vsupne"    => { :hex => 0x228B,	:entity => "&vsupne;",    :type => "ISOamsn",     :udesc => "SUPERSET OF WITH NOT EQUAL TO" },
  "uplus"     => { :hex => 0x228E,	:entity => "&uplus;",     :type => "ISOamsb",     :udesc => "MULTISET UNION" },
  "sqsub"     => { :hex => 0x228F,	:entity => "&sqsub;",     :type => "ISOamsr",     :udesc => "SQUARE IMAGE OF" },
  "sqsup"     => { :hex => 0x2290,	:entity => "&sqsup;",     :type => "ISOamsr",     :udesc => "SQUARE ORIGINAL OF" },
  "sqsube"    => { :hex => 0x2291,	:entity => "&sqsube;",    :type => "ISOamsr",     :udesc => "SQUARE IMAGE OF OR EQUAL TO" },
  "sqsupe"    => { :hex => 0x2292,	:entity => "&sqsupe;",    :type => "ISOamsr",     :udesc => "SQUARE ORIGINAL OF OR EQUAL TO" },
  "sqcap"     => { :hex => 0x2293,	:entity => "&sqcap;",     :type => "ISOamsb",     :udesc => "SQUARE CAP" },
  "sqcup"     => { :hex => 0x2294,	:entity => "&sqcup;",     :type => "ISOamsb",     :udesc => "SQUARE CUP" },
  "oplus"     => { :hex => 0x2295,	:entity => "&oplus;",     :type => "ISOamsb",     :udesc => "CIRCLED PLUS" },
  "ominus"    => { :hex => 0x2296,	:entity => "&ominus;",    :type => "ISOamsb",     :udesc => "CIRCLED MINUS" },
  "otimes"    => { :hex => 0x2297,	:entity => "&otimes;",    :type => "ISOamsb",     :udesc => "CIRCLED TIMES" },
  "osol"      => { :hex => 0x2298,	:entity => "&osol;",      :type => "ISOamsb",     :udesc => "CIRCLED DIVISION SLASH" },
  "odot"      => { :hex => 0x2299,	:entity => "&odot;",      :type => "ISOamsb",     :udesc => "CIRCLED DOT OPERATOR" },
  "ocir"      => { :hex => 0x229A,	:entity => "&ocir;",      :type => "ISOamsb",     :udesc => "CIRCLED RING OPERATOR" },
  "oast"      => { :hex => 0x229B,	:entity => "&oast;",      :type => "ISOamsb",     :udesc => "CIRCLED ASTERISK OPERATOR" },
  "odash"     => { :hex => 0x229D,	:entity => "&odash;",     :type => "ISOamsb",     :udesc => "CIRCLED DASH" },
  "plusb"     => { :hex => 0x229E,	:entity => "&plusb;",     :type => "ISOamsb",     :udesc => "SQUARED PLUS" },
  "minusb"    => { :hex => 0x229F,	:entity => "&minusb;",    :type => "ISOamsb",     :udesc => "SQUARED MINUS" },
  "timesb"    => { :hex => 0x22A0,	:entity => "&timesb;",    :type => "ISOamsb",     :udesc => "SQUARED TIMES" },
  "sdotb"     => { :hex => 0x22A1,	:entity => "&sdotb;",     :type => "ISOamsb",     :udesc => "SQUARED DOT OPERATOR" },
  "vdash"     => { :hex => 0x22A2,	:entity => "&vdash;",     :type => "ISOamsr",     :udesc => "RIGHT TACK" },
  "dashv"     => { :hex => 0x22A3,	:entity => "&dashv;",     :type => "ISOamsr",     :udesc => "LEFT TACK" },
  "top"       => { :hex => 0x22A4,	:entity => "&top;",       :type => "ISOamsb",     :udesc => "DOWN TACK" },
  "bottom"    => { :hex => 0x22A5,	:entity => "&bottom;",    :type => "ISOtech",     :udesc => "UP TACK" },
  "perp"      => { :hex => 0x22A5,	:entity => "&perp;",      :type => "ISOtech",     :udesc => "UP TACK" },
  "models"    => { :hex => 0x22A7,	:entity => "&models;",    :type => "ISOamsr",     :udesc => "MODELS" },
  "vDash"     => { :hex => 0x22A8,	:entity => "&vDash;",     :type => "ISOamsr",     :udesc => "TRUE" },
  "Vdash"     => { :hex => 0x22A9,	:entity => "&Vdash;",     :type => "ISOamsr",     :udesc => "FORCES" },
  "Vvdash"    => { :hex => 0x22AA,	:entity => "&Vvdash;",    :type => "ISOamsr",     :udesc => "TRIPLE VERTICAL BAR RIGHT TURNSTILE" },
  "nvdash"    => { :hex => 0x22AC,	:entity => "&nvdash;",    :type => "ISOamsn",     :udesc => "DOES NOT PROVE" },
  "nvDash"    => { :hex => 0x22AD,	:entity => "&nvDash;",    :type => "ISOamsn",     :udesc => "NOT TRUE" },
  "nVdash"    => { :hex => 0x22AE,	:entity => "&nVdash;",    :type => "ISOamsn",     :udesc => "DOES NOT FORCE" },
  "nVDash"    => { :hex => 0x22AF,	:entity => "&nVDash;",    :type => "ISOamsn",     :udesc => "NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT" },
  "vltri"     => { :hex => 0x22B2,	:entity => "&vltri;",     :type => "ISOamsr",     :udesc => "NORMAL SUBGROUP OF" },
  "vrtri"     => { :hex => 0x22B3,	:entity => "&vrtri;",     :type => "ISOamsr",     :udesc => "CONTAINS AS NORMAL SUBGROUP" },
  "ltrie"     => { :hex => 0x22B4,	:entity => "&ltrie;",     :type => "ISOamsr",     :udesc => "NORMAL SUBGROUP OF OR EQUAL TO" },
  "rtrie"     => { :hex => 0x22B5,	:entity => "&rtrie;",     :type => "ISOamsr",     :udesc => "CONTAINS AS NORMAL SUBGROUP OR EQUAL TO" },
  "mumap"     => { :hex => 0x22B8,	:entity => "&mumap;",     :type => "ISOamsa",     :udesc => "MULTIMAP" },
  "intcal"    => { :hex => 0x22BA,	:entity => "&intcal;",    :type => "ISOamsb",     :udesc => "INTERCALATE" },
  "veebar"    => { :hex => 0x22BB,	:entity => "&veebar;",    :type => "ISOamsr",     :udesc => "XOR" },
  "barwed"    => { :hex => 0x22BC,	:entity => "&barwed;",    :type => "ISOamsb",     :udesc => "NAND" },
  "diam"      => { :hex => 0x22C4,	:entity => "&diam;",      :type => "ISOamsb",     :udesc => "DIAMOND OPERATOR" },
  "sdot"      => { :hex => 0x22C5,	:entity => "&sdot;",      :type => "ISOamsb",     :udesc => "DOT OPERATOR" },
  "sstarf"    => { :hex => 0x22C6,	:entity => "&sstarf;",    :type => "ISOamsb",     :udesc => "STAR OPERATOR" },
  "divonx"    => { :hex => 0x22C7,	:entity => "&divonx;",    :type => "ISOamsb",     :udesc => "DIVISION TIMES" },
  "bowtie"    => { :hex => 0x22C8,	:entity => "&bowtie;",    :type => "ISOamsr",     :udesc => "BOWTIE" },
  "ltimes"    => { :hex => 0x22C9,	:entity => "&ltimes;",    :type => "ISOamsb",     :udesc => "LEFT NORMAL FACTOR SEMIDIRECT PRODUCT" },
  "rtimes"    => { :hex => 0x22CA,	:entity => "&rtimes;",    :type => "ISOamsb",     :udesc => "RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT" },
  "lthree"    => { :hex => 0x22CB,	:entity => "&lthree;",    :type => "ISOamsb",     :udesc => "LEFT SEMIDIRECT PRODUCT" },
  "rthree"    => { :hex => 0x22CC,	:entity => "&rthree;",    :type => "ISOamsb",     :udesc => "RIGHT SEMIDIRECT PRODUCT" },
  "bsime"     => { :hex => 0x22CD,	:entity => "&bsime;",     :type => "ISOamsr",     :udesc => "REVERSED TILDE EQUALS" },
  "cuvee"     => { :hex => 0x22CE,	:entity => "&cuvee;",     :type => "ISOamsb",     :udesc => "CURLY LOGICAL OR" },
  "cuwed"     => { :hex => 0x22CF,	:entity => "&cuwed;",     :type => "ISOamsb",     :udesc => "CURLY LOGICAL AND" },
  "Sub"       => { :hex => 0x22D0,	:entity => "&Sub;",       :type => "ISOamsr",     :udesc => "DOUBLE SUBSET" },
  "Sup"       => { :hex => 0x22D1,	:entity => "&Sup;",       :type => "ISOamsr",     :udesc => "DOUBLE SUPERSET" },
  "Cap"       => { :hex => 0x22D2,	:entity => "&Cap;",       :type => "ISOamsb",     :udesc => "DOUBLE INTERSECTION" },
  "Cup"       => { :hex => 0x22D3,	:entity => "&Cup;",       :type => "ISOamsb",     :udesc => "DOUBLE UNION" },
  "fork"      => { :hex => 0x22D4,	:entity => "&fork;",      :type => "ISOamsr",     :udesc => "PITCHFORK" },
  "ldot"      => { :hex => 0x22D6,	:entity => "&ldot;",      :type => "ISOamsr",     :udesc => "LESS-THAN WITH DOT" },
  "gsdot"     => { :hex => 0x22D7,	:entity => "&gsdot;",     :type => "ISOamsr",     :udesc => "GREATER-THAN WITH DOT" },
  "Ll"        => { :hex => 0x22D8,	:entity => "&Ll;",        :type => "ISOamsr",     :udesc => "VERY MUCH LESS-THAN" },
  "Gg"        => { :hex => 0x22D9,	:entity => "&Gg;",        :type => "ISOamsr",     :udesc => "VERY MUCH GREATER-THAN" },
  "leg"       => { :hex => 0x22DA,	:entity => "&leg;",       :type => "ISOamsr",     :udesc => "LESS-THAN EQUAL TO OR GREATER-THAN" },
  "gel"       => { :hex => 0x22DB,	:entity => "&gel;",       :type => "ISOamsr",     :udesc => "GREATER-THAN EQUAL TO OR LESS-THAN" },
  "els"       => { :hex => 0x22DC,	:entity => "&els;",       :type => "ISOamsr",     :udesc => "EQUAL TO OR LESS-THAN" },
  "egs"       => { :hex => 0x22DD,	:entity => "&egs;",       :type => "ISOamsr",     :udesc => "EQUAL TO OR GREATER-THAN" },
  "cuepr"     => { :hex => 0x22DE,	:entity => "&cuepr;",     :type => "ISOamsr",     :udesc => "EQUAL TO OR PRECEDES" },
  "cuesc"     => { :hex => 0x22DF,	:entity => "&cuesc;",     :type => "ISOamsr",     :udesc => "EQUAL TO OR SUCCEEDS" },
  "npre"      => { :hex => 0x22E0,	:entity => "&npre;",      :type => "ISOamsn",     :udesc => "DOES NOT PRECEDE OR EQUAL" },
  "nsce"      => { :hex => 0x22E1,	:entity => "&nsce;",      :type => "ISOamsn",     :udesc => "DOES NOT SUCCEED OR EQUAL" },
  "lnsim"     => { :hex => 0x22E6,	:entity => "&lnsim;",     :type => "ISOamsn",     :udesc => "LESS-THAN BUT NOT EQUIVALENT TO" },
  "gnsim"     => { :hex => 0x22E7,	:entity => "&gnsim;",     :type => "ISOamsn",     :udesc => "GREATER-THAN BUT NOT EQUIVALENT TO" },
  "prnsim"    => { :hex => 0x22E8,	:entity => "&prnsim;",    :type => "ISOamsn",     :udesc => "PRECEDES BUT NOT EQUIVALENT TO" },
  "scnsim"    => { :hex => 0x22E9,	:entity => "&scnsim;",    :type => "ISOamsn",     :udesc => "SUCCEEDS BUT NOT EQUIVALENT TO" },
  "nltri"     => { :hex => 0x22EA,	:entity => "&nltri;",     :type => "ISOamsn",     :udesc => "NOT NORMAL SUBGROUP OF" },
  "nrtri"     => { :hex => 0x22EB,	:entity => "&nrtri;",     :type => "ISOamsn",     :udesc => "DOES NOT CONTAIN AS NORMAL SUBGROUP" },
  "nltrie"    => { :hex => 0x22EC,	:entity => "&nltrie;",    :type => "ISOamsn",     :udesc => "NOT NORMAL SUBGROUP OF OR EQUAL TO" },
  "nrtrie"    => { :hex => 0x22ED,	:entity => "&nrtrie;",    :type => "ISOamsn",     :udesc => "DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL" },
  "vellip"    => { :hex => 0x22EE,	:entity => "&vellip;",    :type => "ISOpub",      :udesc => "VERTICAL ELLIPSIS" },
  "Barwed"    => { :hex => 0x2306,	:entity => "&Barwed;",    :type => "ISOamsb",     :udesc => "PERSPECTIVE" },
  "lceil"     => { :hex => 0x2308,	:entity => "&lceil;",     :type => "ISOamsc",     :udesc => "LEFT CEILING" },
  "rceil"     => { :hex => 0x2309,	:entity => "&rceil;",     :type => "ISOamsc",     :udesc => "RIGHT CEILING" },
  "lfloor"    => { :hex => 0x230A,	:entity => "&lfloor;",    :type => "ISOamsc",     :udesc => "LEFT FLOOR" },
  "rfloor"    => { :hex => 0x230B,	:entity => "&rfloor;",    :type => "ISOamsc",     :udesc => "RIGHT FLOOR" },
  "drcrop"    => { :hex => 0x230C,	:entity => "&drcrop;",    :type => "ISOpub",      :udesc => "BOTTOM RIGHT CROP" },
  "dlcrop"    => { :hex => 0x230D,	:entity => "&dlcrop;",    :type => "ISOpub",      :udesc => "BOTTOM LEFT CROP" },
  "urcrop"    => { :hex => 0x230E,	:entity => "&urcrop;",    :type => "ISOpub",      :udesc => "TOP RIGHT CROP" },
  "ulcrop"    => { :hex => 0x230F,	:entity => "&ulcrop;",    :type => "ISOpub",      :udesc => "TOP LEFT CROP" },
  "telrec"    => { :hex => 0x2315,	:entity => "&telrec;",    :type => "ISOpub",      :udesc => "TELEPHONE RECORDER" },
  "target"    => { :hex => 0x2316,	:entity => "&target;",    :type => "ISOpub",      :udesc => "POSITION INDICATOR" },
  "ulcorn"    => { :hex => 0x231C,	:entity => "&ulcorn;",    :type => "ISOamsc",     :udesc => "TOP LEFT CORNER" },
  "urcorn"    => { :hex => 0x231D,	:entity => "&urcorn;",    :type => "ISOamsc",     :udesc => "TOP RIGHT CORNER" },
  "dlcorn"    => { :hex => 0x231E,	:entity => "&dlcorn;",    :type => "ISOamsc",     :udesc => "BOTTOM LEFT CORNER" },
  "drcorn"    => { :hex => 0x231F,	:entity => "&drcorn;",    :type => "ISOamsc",     :udesc => "BOTTOM RIGHT CORNER" },
  "frown"     => { :hex => 0x2322,	:entity => "&frown;",     :type => "ISOamsr",     :udesc => "FROWN" },
  "sfrown"    => { :hex => 0x2322,	:entity => "&sfrown;",    :type => "ISOamsr",     :udesc => "FROWN" },
  "smile"     => { :hex => 0x2323,	:entity => "&smile;",     :type => "ISOamsr",     :udesc => "SMILE" },
  "ssmile"    => { :hex => 0x2323,	:entity => "&ssmile;",    :type => "ISOamsr",     :udesc => "SMILE" },
  "lang"      => { :hex => 0x2329,	:entity => "&lang;",      :type => "ISOtech",     :udesc => "LEFT-POINTING ANGLE BRACKET" },
  "rang"      => { :hex => 0x232A,	:entity => "&rang;",      :type => "ISOtech",     :udesc => "RIGHT-POINTING ANGLE BRACKET" },
  "blank"     => { :hex => 0x2423,	:entity => "&blank;",     :type => "ISOpub",      :udesc => "OPEN BOX" },
  "oS"        => { :hex => 0x24C8,	:entity => "&oS;",        :type => "ISOamso",     :udesc => "CIRCLED LATIN CAPITAL LETTER S" },
  "boxh"      => { :hex => 0x2500,	:entity => "&boxh;",      :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT HORIZONTAL" },
  "boxv"      => { :hex => 0x2502,	:entity => "&boxv;",      :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT VERTICAL" },
  "boxdr"     => { :hex => 0x250C,	:entity => "&boxdr;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT DOWN AND RIGHT" },
  "boxdl"     => { :hex => 0x2510,	:entity => "&boxdl;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT DOWN AND LEFT" },
  "boxur"     => { :hex => 0x2514,	:entity => "&boxur;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT UP AND RIGHT" },
  "boxul"     => { :hex => 0x2518,	:entity => "&boxul;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT UP AND LEFT" },
  "boxvr"     => { :hex => 0x251C,	:entity => "&boxvr;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT VERTICAL AND RIGHT" },
  "boxvl"     => { :hex => 0x2524,	:entity => "&boxvl;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT VERTICAL AND LEFT" },
  "boxhd"     => { :hex => 0x252C,	:entity => "&boxhd;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT DOWN AND HORIZONTAL" },
  "boxhu"     => { :hex => 0x2534,	:entity => "&boxhu;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT UP AND HORIZONTAL" },
  "boxvh"     => { :hex => 0x253C,	:entity => "&boxvh;",     :type => "ISObox",      :udesc => "BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL" },
  "boxH"      => { :hex => 0x2550,	:entity => "&boxH;",      :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE HORIZONTAL" },
  "boxV"      => { :hex => 0x2551,	:entity => "&boxV;",      :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE VERTICAL" },
  "boxdR"     => { :hex => 0x2552,	:entity => "&boxdR;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE" },
  "boxDr"     => { :hex => 0x2553,	:entity => "&boxDr;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE" },
  "boxDR"     => { :hex => 0x2554,	:entity => "&boxDR;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE DOWN AND RIGHT" },
  "boxdL"     => { :hex => 0x2555,	:entity => "&boxdL;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE" },
  "boxDl"     => { :hex => 0x2556,	:entity => "&boxDl;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE" },
  "boxDL"     => { :hex => 0x2557,	:entity => "&boxDL;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE DOWN AND LEFT" },
  "boxuR"     => { :hex => 0x2558,	:entity => "&boxuR;",     :type => "ISObox",      :udesc => "BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE" },
  "boxUr"     => { :hex => 0x2559,	:entity => "&boxUr;",     :type => "ISObox",      :udesc => "BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE" },
  "boxUR"     => { :hex => 0x255A,	:entity => "&boxUR;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE UP AND RIGHT" },
  "boxuL"     => { :hex => 0x255B,	:entity => "&boxuL;",     :type => "ISObox",      :udesc => "BOX DRAWINGS UP SINGLE AND LEFT DOUBLE" },
  "boxUl"     => { :hex => 0x255C,	:entity => "&boxUl;",     :type => "ISObox",      :udesc => "BOX DRAWINGS UP DOUBLE AND LEFT SINGLE" },
  "boxUL"     => { :hex => 0x255D,	:entity => "&boxUL;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE UP AND LEFT" },
  "boxvR"     => { :hex => 0x255E,	:entity => "&boxvR;",     :type => "ISObox",      :udesc => "BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE" },
  "boxVr"     => { :hex => 0x255F,	:entity => "&boxVr;",     :type => "ISObox",      :udesc => "BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE" },
  "boxVR"     => { :hex => 0x2560,	:entity => "&boxVR;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE VERTICAL AND RIGHT" },
  "boxvL"     => { :hex => 0x2561,	:entity => "&boxvL;",     :type => "ISObox",      :udesc => "BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE" },
  "boxVl"     => { :hex => 0x2562,	:entity => "&boxVl;",     :type => "ISObox",      :udesc => "BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE" },
  "boxVL"     => { :hex => 0x2563,	:entity => "&boxVL;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE VERTICAL AND LEFT" },
  "boxHd"     => { :hex => 0x2564,	:entity => "&boxHd;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE" },
  "boxhD"     => { :hex => 0x2565,	:entity => "&boxhD;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE" },
  "boxHD"     => { :hex => 0x2566,	:entity => "&boxHD;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL" },
  "boxHu"     => { :hex => 0x2567,	:entity => "&boxHu;",     :type => "ISObox",      :udesc => "BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE" },
  "boxhU"     => { :hex => 0x2568,	:entity => "&boxhU;",     :type => "ISObox",      :udesc => "BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE" },
  "boxHU"     => { :hex => 0x2569,	:entity => "&boxHU;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE UP AND HORIZONTAL" },
  "boxvH"     => { :hex => 0x256A,	:entity => "&boxvH;",     :type => "ISObox",      :udesc => "BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE" },
  "boxVh"     => { :hex => 0x256B,	:entity => "&boxVh;",     :type => "ISObox",      :udesc => "BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE" },
  "boxVH"     => { :hex => 0x256C,	:entity => "&boxVH;",     :type => "ISObox",      :udesc => "BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL" },
  "uhblk"     => { :hex => 0x2580,	:entity => "&uhblk;",     :type => "ISOpub",      :udesc => "UPPER HALF BLOCK" },
  "lhblk"     => { :hex => 0x2584,	:entity => "&lhblk;",     :type => "ISOpub",      :udesc => "LOWER HALF BLOCK" },
  "block"     => { :hex => 0x2588,	:entity => "&block;",     :type => "ISOpub",      :udesc => "FULL BLOCK" },
  "blk14"     => { :hex => 0x2591,	:entity => "&blk14;",     :type => "ISOpub",      :udesc => "LIGHT SHADE" },
  "blk12"     => { :hex => 0x2592,	:entity => "&blk12;",     :type => "ISOpub",      :udesc => "MEDIUM SHADE" },
  "blk34"     => { :hex => 0x2593,	:entity => "&blk34;",     :type => "ISOpub",      :udesc => "DARK SHADE" },
  "squ"       => { :hex => 0x25A1,	:entity => "&squ;",       :type => "ISOpub",      :udesc => "WHITE SQUARE" },
  "square"    => { :hex => 0x25A1,	:entity => "&square;",    :type => "ISOtech",     :udesc => "WHITE SQUARE" },
  "squf"      => { :hex => 0x25AA,	:entity => "&squf;",      :type => "ISOpub",      :udesc => "BLACK SMALL SQUARE" },
  "rect"      => { :hex => 0x25AD,	:entity => "&rect;",      :type => "ISOpub",      :udesc => "WHITE RECTANGLE" },
  "marker"    => { :hex => 0x25AE,	:entity => "&marker;",    :type => "ISOpub",      :udesc => "BLACK VERTICAL RECTANGLE" },
  "xutri"     => { :hex => 0x25B3,	:entity => "&xutri;",     :type => "ISOamsb",     :udesc => "WHITE UP-POINTING TRIANGLE" },
  "utrif"     => { :hex => 0x25B4,	:entity => "&utrif;",     :type => "ISOpub",      :udesc => "BLACK UP-POINTING SMALL TRIANGLE" },
  "utri"      => { :hex => 0x25B5,	:entity => "&utri;",      :type => "ISOpub",      :udesc => "WHITE UP-POINTING SMALL TRIANGLE" },
  "rtrif"     => { :hex => 0x25B8,	:entity => "&rtrif;",     :type => "ISOpub",      :udesc => "BLACK RIGHT-POINTING SMALL TRIANGLE" },
  "rtri"      => { :hex => 0x25B9,	:entity => "&rtri;",      :type => "ISOpub",      :udesc => "WHITE RIGHT-POINTING SMALL TRIANGLE" },
  "xdtri"     => { :hex => 0x25BD,	:entity => "&xdtri;",     :type => "ISOamsb",     :udesc => "WHITE DOWN-POINTING TRIANGLE" },
  "dtrif"     => { :hex => 0x25BE,	:entity => "&dtrif;",     :type => "ISOpub",      :udesc => "BLACK DOWN-POINTING SMALL TRIANGLE" },
  "dtri"      => { :hex => 0x25BF,	:entity => "&dtri;",      :type => "ISOpub",      :udesc => "WHITE DOWN-POINTING SMALL TRIANGLE" },
  "ltrif"     => { :hex => 0x25C2,	:entity => "&ltrif;",     :type => "ISOpub",      :udesc => "BLACK LEFT-POINTING SMALL TRIANGLE" },
  "ltri"      => { :hex => 0x25C3,	:entity => "&ltri;",      :type => "ISOpub",      :udesc => "WHITE LEFT-POINTING SMALL TRIANGLE" },
  "loz"       => { :hex => 0x25CA,	:entity => "&loz;",       :type => "ISOpub",      :udesc => "LOZENGE" },
  "cir"       => { :hex => 0x25CB,	:entity => "&cir;",       :type => "ISOpub",      :udesc => "WHITE CIRCLE" },
  "xcirc"     => { :hex => 0x25CB,	:entity => "&xcirc;",     :type => "ISOamsb",     :udesc => "WHITE CIRCLE" },
  "starf"     => { :hex => 0x2605,	:entity => "&starf;",     :type => "ISOpub",      :udesc => "BLACK STAR" },
  "star"      => { :hex => 0x2606,	:entity => "&star;",      :type => "ISOpub",      :udesc => "WHITE STAR" },
  "phone"     => { :hex => 0x260E,	:entity => "&phone;",     :type => "ISOpub",      :udesc => "BLACK TELEPHONE" },
  "female"    => { :hex => 0x2640,	:entity => "&female;",    :type => "ISOpub",      :udesc => "FEMALE SIGN" },
  "male"      => { :hex => 0x2642,	:entity => "&male;",      :type => "ISOpub",      :udesc => "MALE SIGN" },
  "spades"    => { :hex => 0x2660,	:entity => "&spades;",    :type => "ISOpub",      :udesc => "BLACK SPADE SUIT" },
  "clubs"     => { :hex => 0x2663,	:entity => "&clubs;",     :type => "ISOpub",      :udesc => "BLACK CLUB SUIT" },
  "hearts"    => { :hex => 0x2665,	:entity => "&hearts;",    :type => "ISOpub",      :udesc => "BLACK HEART SUIT" },
  "diams"     => { :hex => 0x2666,	:entity => "&diams;",     :type => "ISOpub",      :udesc => "BLACK DIAMOND SUIT" },
  "sung"      => { :hex => 0x266A,	:entity => "&sung;",      :type => "ISOnum",      :udesc => "EIGHTH NOTE" },
  "flat"      => { :hex => 0x266D,	:entity => "&flat;",      :type => "ISOpub",      :udesc => "MUSIC FLAT SIGN" },
  "natur"     => { :hex => 0x266E,	:entity => "&natur;",     :type => "ISOpub",      :udesc => "MUSIC NATURAL SIGN" },
  "sharp"     => { :hex => 0x266F,	:entity => "&sharp;",     :type => "ISOpub",      :udesc => "MUSIC SHARP SIGN" },
  "check"     => { :hex => 0x2713,	:entity => "&check;",     :type => "ISOpub",      :udesc => "CHECK MARK" },
  "cross"     => { :hex => 0x2717,	:entity => "&cross;",     :type => "ISOpub",      :udesc => "BALLOT X" },
  "malt"      => { :hex => 0x2720,	:entity => "&malt;",      :type => "ISOpub",      :udesc => "MALTESE CROSS" },
  "lozf"      => { :hex => 0x2726,	:entity => "&lozf;",      :type => "ISOpub",      :udesc => "BLACK FOUR POINTED STAR" },
  "loz"       => { :hex => 0x2727,	:entity => "&loz;",       :type => "ISOpub",      :udesc => "WHITE FOUR POINTED STAR" },
  "sext"      => { :hex => 0x2736,	:entity => "&sext;",      :type => "ISOpub",      :udesc => "SIX POINTED BLACK STAR" },
# "epsiv"     => { :hex => 0x????,	:entity => "&epsiv;",     :type => "ISOgrk3",     :udesc => "variant epsilon" },
# "fjlig"     => { :hex => 0x????,	:entity => "&fjlig;",     :type => "ISOpub",      :udesc => "fj ligature" },
# "gEl"       => { :hex => 0x????,	:entity => "&gEl;",       :type => "ISOamsr",     :udesc => "greater-than, double equals, less-than" },
# "gap"       => { :hex => 0x????,	:entity => "&gap;",       :type => "ISOamsr",     :udesc => "greater-than, approximately equal to" },
# "gnap"      => { :hex => 0x????,	:entity => "&gnap;",      :type => "ISOamsn",     :udesc => "greater-than, not approximately equal to" },
# "jnodot"    => { :hex => 0x????,	:entity => "&jnodot;",    :type => "ISOamso",     :udesc => "latin small letter dotless j" },
# "lEg"       => { :hex => 0x????,	:entity => "&lEg;",       :type => "ISOamsr",     :udesc => "less-than, double equals, greater-than" },
# "lap"       => { :hex => 0x????,	:entity => "&lap;",       :type => "ISOamsr",     :udesc => "less-than, approximately equal to" },
# "lnap"      => { :hex => 0x????,	:entity => "&lnap;",      :type => "ISOamsn",     :udesc => "less-than, not approximately equal to" },
# "lpargt"    => { :hex => 0x????,	:entity => "&lpargt;",    :type => "ISOamsc",     :udesc => "left parenthesis, greater-than" },
# "ngE"       => { :hex => 0x????,	:entity => "&ngE;",       :type => "ISOamsn",     :udesc => "not greater-than, double equals" },
# "nlE"       => { :hex => 0x????,	:entity => "&nlE;",       :type => "ISOamsn",     :udesc => "not less-than, double equals" },
# "nsmid"     => { :hex => 0x????,	:entity => "&nsmid;",     :type => "ISOamsn",     :udesc => "nshortmid" },
# "prap"      => { :hex => 0x????,	:entity => "&prap;",      :type => "ISOamsr",     :udesc => "precedes, approximately equal to" },
# "prnE"      => { :hex => 0x????,	:entity => "&prnE;",      :type => "ISOamsn",     :udesc => "precedes, not double equal" },
# "prnap"     => { :hex => 0x????,	:entity => "&prnap;",     :type => "ISOamsn",     :udesc => "precedes, not approximately equal to" },
# "rpargt"    => { :hex => 0x????,	:entity => "&rpargt;",    :type => "ISOamsc",     :udesc => "right parenthesis, greater-than" },
# "scap"      => { :hex => 0x????,	:entity => "&scap;",      :type => "ISOamsr",     :udesc => "succeeds, approximately equal to" },
# "scnE"      => { :hex => 0x????,	:entity => "&scnE;",      :type => "ISOamsn",     :udesc => "succeeds, not double equals" },
# "scnap"     => { :hex => 0x????,	:entity => "&scnap;",     :type => "ISOamsn",     :udesc => "succeeds, not approximately equal to" },
# "smid"      => { :hex => 0x????,	:entity => "&smid;",      :type => "ISOamsr",     :udesc => "shortmid" },
  "fflig"     => { :hex => 0xFB00,	:entity => "&fflig;",     :type => "ISOpub",      :udesc => "LATIN SMALL LIGATURE FF" },
  "filig"     => { :hex => 0xFB01,	:entity => "&filig;",     :type => "ISOpub",      :udesc => "LATIN SMALL LIGATURE FI" },
  "fllig"     => { :hex => 0xFB02,	:entity => "&fllig;",     :type => "ISOpub",      :udesc => "LATIN SMALL LIGATURE FL" },
  "ffilig"    => { :hex => 0xFB03,	:entity => "&ffilig;",    :type => "ISOpub",      :udesc => "LATIN SMALL LIGATURE FFI" },
  "ffllig"    => { :hex => 0xFB04,	:entity => "&ffllig;",    :type => "ISOpub",      :udesc => "LATIN SMALL LIGATURE FFL" },
  }


# xhm = HTMLEntities::FULL_MAPPINGS
# lhm = HTMLEntities::LYNX_MAPPINGS
# 
# lhm.each do |ent, hsh|
#   warn "WTF: #{"%6d %6d %s"%[hsh[:ent], 3, ent]} #{xhm[ent].inspect} #{hsh.inspect}" unless (xhm[ent] && (xhm[ent][:ent] == hsh[:ent]))
# end
  
