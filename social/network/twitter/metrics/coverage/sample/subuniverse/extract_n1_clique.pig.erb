%default TW_OBJ_PATH   '<%= ics_tw_obj %>'
%default NBRHOOD_PATH  '<%= nbrhood_path %>'

REGISTER <%= pig_home %>/contrib/piggybank/java/piggybank.jar;

a_follows_b            = LOAD '$TW_OBJ_PATH/a_follows_b'           	AS (rsrc:chararray, <%= AFollowsB.to_pig %>);
a_favorites_b          = LOAD '$TW_OBJ_PATH/a_favorites_b'         	AS (rsrc:chararray, <%= AFavoritesB.to_pig %>);
a_replies_b            = LOAD '$TW_OBJ_PATH/a_replies_b'           	AS (rsrc:chararray, <%= ARepliesB.to_pig %>);
a_atsigns_b            = LOAD '$TW_OBJ_PATH/a_atsigns_b'           	AS (rsrc:chararray, <%= AAtsignsB.to_pig %>);
a_retweets_b           = LOAD '$TW_OBJ_PATH/a_retweets_b'          	AS (rsrc:chararray, <%= ARetweetsB.to_pig %>);
tweet                  = LOAD '$TW_OBJ_PATH/tweet'                 	AS (rsrc:chararray, <%= Tweet.to_pig %>);
twitter_user_search_id = LOAD '$TW_OBJ_PATH/twitter_user_search_id'	AS (rsrc:chararray, <%= TwitterUserSearchId.to_pig %>);                                                                                                                                                                                                                                           
twitter_user           = LOAD '$TW_OBJ_PATH/twitter_user'          	AS (rsrc:chararray, <%= TwitterUser.to_pig %>);
twitter_user_partial   = LOAD '$TW_OBJ_PATH/twitter_user_partial'  	AS (rsrc:chararray, <%= TwitterUserPartial.to_pig %>);                                       
twitter_user_profile   = LOAD '$TW_OBJ_PATH/twitter_user_profile'  	AS (rsrc:chararray, <%= TwitterUserProfile.to_pig %>);
twitter_user_style     = LOAD '$TW_OBJ_PATH/twitter_user_style'    	AS (rsrc:chararray, <%= TwitterUserStyle.to_pig %>);
twitter_user_id        = LOAD '$TW_OBJ_PATH/twitter_user_id'       	AS (rsrc:chararray, <%= TwitterUserId.to_pig %>);
twitter_user_location  = LOAD '$TW_OBJ_PATH/twitter_user_location' 	AS (rsrc:chararray, <%= TwitterUserLocation.to_pig %>);
hashtag                = LOAD '$TW_OBJ_PATH/hashtag'               	AS (rsrc:chararray, <%= Hashtag.to_pig %>);
smiley                 = LOAD '$TW_OBJ_PATH/smiley'                	AS (rsrc:chararray, <%= Smiley.to_pig %>);
tweet_url              = LOAD '$TW_OBJ_PATH/tweet_url'             	AS (rsrc:chararray, <%= TweetUrl.to_pig %>);
stock_token            = LOAD '$TW_OBJ_PATH/stock_token'           	AS (rsrc:chararray, <%= StockToken.to_pig %>);
word_token             = LOAD '$TW_OBJ_PATH/word_token'            	AS (rsrc:chararray, <%= WordToken.to_pig %>);
geo                    = LOAD '$TW_OBJ_PATH/geo'                   	AS (rsrc:chararray, <%= Geo.to_pig %>);

a_follows_b_s            = LOAD '$NBRHOOD_PATH/a_follows_b'           	AS (rsrc:chararray, <%= AFollowsB.to_pig %>);
a_atsigns_b_s            = LOAD '$NBRHOOD_PATH/a_atsigns_b'           	AS (rsrc:chararray, <%= AAtsignsB.to_pig %>);
tweet_s                  = LOAD '$NBRHOOD_PATH/tweet'                 	AS (rsrc:chararray, <%= Tweet.to_pig %>);
n1                       = LOAD '$NBRHOOD_PATH/n1'                 	AS (user_id:long);
twitter_user_s           = LOAD '$NBRHOOD_PATH/twitter_user_id'         AS (rsrc:chararray, <%= TwitterUserId.to_pig %>);

--
-- Find all nodes in the in or out 1-neighborhood (at radius 1 from our seed)
--

-- Find all atsigns that = originate in n1
atsigns_from_n1_j        = JOIN a_atsigns_b BY user_a_id, n1 BY user_id using 'replicated';
atsigns_from_n1_g        = FOREACH atsigns_from_n1_j GENERATE a_atsigns_b::user_a_id AS user_a_id, a_atsigns_b::user_b_id AS user_b_id;
atsigns_from_n1          = FILTER atsigns_from_n1_g BY (user_a_id != user_b_id);
-- Among those atsigns, find those that terminate in n1 as well
atsigns_within_n1_j      = JOIN atsigns_from_n1 BY user_b_id, n1 BY user_id using 'replicated';
atsigns_within_n1_p      = FOREACH atsigns_within_n1_j GENERATE user_a_id, user_b_id;
atsigns_within_n1_c      = GROUP atsigns_within_n1_p BY (user_a_id, user_b_id);
atsigns_within_n1        = FOREACH atsigns_within_n1_c GENERATE group.user_a_id AS user_a_id, group.user_b_id AS user_b_id, COUNT(atsigns_within_n1_p) AS num;
-- Save the result
STORE atsigns_within_n1 INTO '$NBRHOOD_PATH/n1atsigns';

--
-- Find all follows that originate in n1
-- 
follows_from_n1_j        = JOIN a_follows_b BY user_a_id, n1 BY user_id using 'replicated';
follows_from_n1_g        = FOREACH follows_from_n1_j GENERATE a_follows_b::user_a_id AS user_a_id, a_follows_b::user_b_id AS user_b_id;
follows_from_n1          = FILTER follows_from_n1_g BY (user_a_id != user_b_id);
-- Among those follows, find those that terminate in n1 as well
follows_within_n1_j      = JOIN follows_from_n1 BY user_b_id, n1 BY user_id using 'replicated';
follows_within_n1_p      = FOREACH follows_within_n1_j GENERATE user_a_id, user_b_id;
follows_within_n1_c      = GROUP follows_within_n1_p BY (user_a_id, user_b_id);
follows_within_n1        = FOREACH follows_within_n1_c GENERATE group.user_a_id AS user_a_id, group.user_b_id AS user_b_id, COUNT(follows_within_n1_p) AS num;
-- Save the result
STORE follows_within_n1 INTO '$NBRHOOD_PATH/n1follows';
